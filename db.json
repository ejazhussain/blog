{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/images/header-background.svg","path":"images/header-background.svg","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/code.svg","path":"images/code.svg","modified":0,"renderable":0},{"_id":"themes/ejazhussain/source/bulma.sass","path":"bulma.sass","modified":0,"renderable":1},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"themes/ejazhussain/source/style.less","path":"style.less","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/background.svg","path":"img/background.svg","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/timeline-clock.gif","path":"img/timeline-clock.gif","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/timeline-dot.gif","path":"img/timeline-dot.gif","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/timeline.gif","path":"img/timeline.gif","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/js/jquery.fitvids.js","path":"js/jquery.fitvids.js","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/js/scroll.js","path":"js/scroll.js","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/fonts/selection.json","path":"fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/banner-pc.jpg","path":"img/banner-pc.jpg","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/code.sass","path":"sass/template/code.sass","modified":0,"renderable":1},{"_id":"source/about/index/about.jpg","path":"about/index/about.jpg","modified":0,"renderable":0},{"_id":"themes/ejazhussain/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/base/generic.sass","path":"sass/base/generic.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/base/helpers.sass","path":"sass/base/helpers.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/base/minireset.sass","path":"sass/base/minireset.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/breadcrumb.sass","path":"sass/components/breadcrumb.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/card.sass","path":"sass/components/card.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/dropdown.sass","path":"sass/components/dropdown.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/media.sass","path":"sass/components/media.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/level.sass","path":"sass/components/level.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/menu.sass","path":"sass/components/menu.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/modal.sass","path":"sass/components/modal.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/message.sass","path":"sass/components/message.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/navbar.sass","path":"sass/components/navbar.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/panel.sass","path":"sass/components/panel.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/pagination.sass","path":"sass/components/pagination.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/components/tabs.sass","path":"sass/components/tabs.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/box.sass","path":"sass/elements/box.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/button.sass","path":"sass/elements/button.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/form.sass","path":"sass/elements/form.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/content.sass","path":"sass/elements/content.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/icon.sass","path":"sass/elements/icon.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/image.sass","path":"sass/elements/image.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/notification.sass","path":"sass/elements/notification.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/other.sass","path":"sass/elements/other.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/container.sass","path":"sass/elements/container.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/table.sass","path":"sass/elements/table.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/tag.sass","path":"sass/elements/tag.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/title.sass","path":"sass/elements/title.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/layout/footer.sass","path":"sass/layout/footer.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/layout/hero.sass","path":"sass/layout/hero.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/layout/section.sass","path":"sass/layout/section.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/grid/columns.sass","path":"sass/grid/columns.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/elements/progress.sass","path":"sass/elements/progress.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/grid/tiles.sass","path":"sass/grid/tiles.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/app.scss","path":"sass/template/app.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/article.scss","path":"sass/template/article.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/footer.scss","path":"sass/template/footer.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/layout.scss","path":"sass/template/layout.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/header.scss","path":"sass/template/header.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/mixin.scss","path":"sass/template/mixin.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/pagination.scss","path":"sass/template/pagination.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/posts.scss","path":"sass/template/posts.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/profilecard.scss","path":"sass/template/profilecard.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/queries.scss","path":"sass/template/queries.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/search.scss","path":"sass/template/search.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/sidebar.scss","path":"sass/template/sidebar.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/tags.scss","path":"sass/template/tags.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/template/timeline.scss","path":"sass/template/timeline.scss","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/utilities/functions.sass","path":"sass/utilities/functions.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/utilities/animations.sass","path":"sass/utilities/animations.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/utilities/derived-variables.sass","path":"sass/utilities/derived-variables.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/utilities/controls.sass","path":"sass/utilities/controls.sass","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/sass/utilities/mixins.sass","path":"sass/utilities/mixins.sass","modified":0,"renderable":1},{"_id":"source/images/profile.png","path":"images/profile.png","modified":0,"renderable":0},{"_id":"themes/ejazhussain/source/sass/utilities/initial-variables.sass","path":"sass/utilities/initial-variables.sass","modified":0,"renderable":1},{"_id":"source/images/about.jpg","path":"images/about.jpg","modified":0,"renderable":0},{"_id":"themes/ejazhussain/source/img/banner-pc-tea.jpg","path":"img/banner-pc-tea.jpg","modified":0,"renderable":1},{"_id":"themes/ejazhussain/source/img/logo.jpg","path":"img/logo.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/robots.txt","hash":"19c6e02fa4cb963d8c20876346a613a50ba86716","modified":1537009347295},{"_id":"source/_redirects","hash":"392fcf3dfe1916d48ac89781918cba2d4799e2c4","modified":1536735855020},{"_id":"themes/ejazhussain/LICENSE","hash":"0e12aed461110e809af1a52728f499f852e85e0a","modified":1534675828311},{"_id":"themes/ejazhussain/README.md","hash":"6db79c6b936eefa6eb35965f6fea1f30f24a35e0","modified":1534675828313},{"_id":"themes/ejazhussain/_config.yml","hash":"fe074a46999b994cd94da0e5dcc26f55284656b1","modified":1545664583489},{"_id":"source/_posts/Import-Terms-From-CSV.md","hash":"bab2eeb661a3ebd05a299919237cfdcb17be7a95","modified":1545391027973},{"_id":"source/_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016.md","hash":"4ac5a19c1bd02474d3019ae168f4392d9283135d","modified":1545391089593},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights.md","hash":"eb082fcf77511afdde2c7167f4ff670bafe05e12","modified":1545667708910},{"_id":"source/_posts/azure-blob-storage-using-node.md","hash":"e8ea1c7c443560927225389033ac8ab77c37e9a8","modified":1545672916625},{"_id":"source/_posts/spfx-image-gallery.md","hash":"e0718e37ba134f33a16268e04640384e68701070","modified":1552228524269},{"_id":"source/_posts/azure-appinsight-configurations-using-spfx-customizer.md","hash":"d14c7f60aafc24fb9e02bbc33f2d7472c4488d5b","modified":1545673112748},{"_id":"source/_posts/list-json-formatting.md","hash":"1682a63b5a90bcf1ad549d745e39625d7b8493dd","modified":1551652986710},{"_id":"source/_posts/sharepoint-approval-task-using-flow.md","hash":"4e6f4e23a3b5e1ba85ddd998aa8220552333523d","modified":1552239008253},{"_id":"source/_posts/spfx-office365-reports.md","hash":"88468b632cb1ca6199b3808a8bde6f2d5862e2f1","modified":1554664580339},{"_id":"source/about/index.ejs","hash":"6bfba00c877c6e4f19c2e9a78c63f9cac1c23912","modified":1537166197794},{"_id":"source/images/header-background.svg","hash":"33c1473426f5d518e073708f58b6147abc250745","modified":1534675828299},{"_id":"source/images/favicon.ico","hash":"57e19c18bfe2f77a1bc3229dc104114dc171ce72","modified":1534675828293},{"_id":"themes/ejazhussain/layout/index.ejs","hash":"2cf32a44af566ab7ed75451b5c3146b6733310e2","modified":1537032947335},{"_id":"themes/ejazhussain/layout/category.ejs","hash":"3e6dd68b7467723de2ca755ca5f767bd644a0b42","modified":1536505304111},{"_id":"themes/ejazhussain/layout/page.ejs","hash":"634097025618d15f07c8f5301a14953afc93553d","modified":1537031955236},{"_id":"themes/ejazhussain/layout/layout.ejs","hash":"7de10e67692a7f55571f804f4d967c623b702485","modified":1534675828398},{"_id":"themes/ejazhussain/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1534675828403},{"_id":"themes/ejazhussain/layout/tag.ejs","hash":"774a6461f1087eb22f9e7fd6b5cb745cb189a3b9","modified":1534675828404},{"_id":"source/images/code.svg","hash":"ac38cfd4b89734536d02cd3d0c6d690afb2e980d","modified":1534675828291},{"_id":"themes/ejazhussain/source/bulma.sass","hash":"6b295176bc86675fd0d67a62c9d9bf7e1e4c0f6f","modified":1534675828406},{"_id":"source/images/avatar.jpg","hash":"445c00332b7f381b21820ea422e5bc7f4f236aaa","modified":1534675828288},{"_id":"themes/ejazhussain/source/style.less","hash":"b3576518c8dbe1974e60747e46d594995b33eb2f","modified":1534675828885},{"_id":"themes/ejazhussain/layout/archive.ejs","hash":"7ccf96d2d8d4cc2591b995584b225fba703481d1","modified":1534675828391},{"_id":"source/_posts/Import-Terms-From-CSV/post-featured.png","hash":"095a5343c66aaa0e4c78967426bd20b68d5324e9","modified":1535491142099},{"_id":"source/_posts/Import-Terms-From-CSV/samplecsv.png","hash":"c2e5be5e134fb673f398e41b512d6415e0bbb908","modified":1535393308862},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/customevents.png","hash":"260efd30e5415bd25a6f128440ad0cd4a429ddda","modified":1536517504106},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/js-code-snippet.png","hash":"105df3e9a41c7f0d24a39887053805be1803b944","modified":1536508716363},{"_id":"source/_posts/azure-appinsight-configurations-using-spfx-customizer/custom-properties.png","hash":"5d69b91ed0144937382e23a081f84820c15dd4ed","modified":1544988678599},{"_id":"source/_posts/Import-Terms-From-CSV/groups.csv","hash":"dd689ba0e997104b7b95982b356a60630e03944a","modified":1535393308861},{"_id":"source/_posts/spfx-office365-reports/post-featured.png","hash":"948817b260f710f05a5e3b33f418e108df1dacc7","modified":1554664418000},{"_id":"source/_posts/spfx-image-gallery/taxonomy-query.png","hash":"ff5399f40f9947021edbc0f30ab5e29d9912737e","modified":1549806295903},{"_id":"themes/ejazhussain/layout/_partial/article.ejs","hash":"9978e770759f1e27be5d4e9c40598ea6d1019e3f","modified":1536504175518},{"_id":"themes/ejazhussain/layout/_partial/footer.ejs","hash":"ce162fa75826220dab26296d84eb843d4a94ad6e","modified":1551640548598},{"_id":"themes/ejazhussain/layout/_partial/gtag.ejs","hash":"da3f57e1c36270ea4529e1d24ddb43c6066220e0","modified":1535890744329},{"_id":"themes/ejazhussain/layout/_partial/header.ejs","hash":"ac5cfc6ee72a4242fcdb69a5b3bd9d3376596bc5","modified":1534675828328},{"_id":"themes/ejazhussain/layout/_partial/hero.ejs","hash":"f40779b2e57183dc01b92f8157be76b795f73c48","modified":1545666606864},{"_id":"themes/ejazhussain/layout/_partial/home.ejs","hash":"cbcba88c2c350886ac2c2b4f9ce26cb3470b3f75","modified":1536432558330},{"_id":"themes/ejazhussain/layout/_partial/loading.ejs","hash":"02bd745f5177e589c7febe1ee1a02031c861b199","modified":1534675828334},{"_id":"themes/ejazhussain/layout/_partial/page.ejs","hash":"eb81f545879199a4ce2c03301fec8f27b8c8340d","modified":1537033090281},{"_id":"themes/ejazhussain/layout/_partial/pagination.ejs","hash":"f7bea4f31125e38992d8a83a1c73d76e20b69363","modified":1534675828338},{"_id":"themes/ejazhussain/layout/_partial/search.ejs","hash":"038474c735404c65894d024ca7324344e3f1a194","modified":1534675828370},{"_id":"themes/ejazhussain/layout/_partial/post.ejs","hash":"adf184c8f32ea19edb1cc4588fd312dfe0bffd6d","modified":1536416829535},{"_id":"themes/ejazhussain/layout/_partial/side.ejs","hash":"97baa21b3428268128f764e89cd85e6d0274cd45","modified":1534675828373},{"_id":"themes/ejazhussain/layout/_widget/about.ejs","hash":"f550008a98862c48da9492fb9bdc69653cb31456","modified":1534675828375},{"_id":"themes/ejazhussain/layout/_partial/scripts.ejs","hash":"892de0f5d2d3a99b2edc0339bc0c91bc579e5d66","modified":1534675828368},{"_id":"themes/ejazhussain/layout/_partial/archive.ejs","hash":"532602e52a30ca4a138309f9756b819fcf3ab884","modified":1534675828319},{"_id":"themes/ejazhussain/layout/_partial/head.ejs","hash":"aceb07e51611124485c98f47d5bbc2bcf658fbe6","modified":1551641547584},{"_id":"themes/ejazhussain/source/fonts/icomoon.svg","hash":"d2f6755d619e577d90537e7e92640a2e1b833f6f","modified":1534675828425},{"_id":"themes/ejazhussain/layout/_widget/categories.ejs","hash":"bde7f44e08fd9046fd9b44876f4b2fec9357bf7d","modified":1534675828377},{"_id":"themes/ejazhussain/layout/_widget/tagcloud.ejs","hash":"9fc962c86dd577d34910225a0b503cfe45e1b824","modified":1534675828381},{"_id":"themes/ejazhussain/source/img/background.svg","hash":"33c1473426f5d518e073708f58b6147abc250745","modified":1534675828456},{"_id":"themes/ejazhussain/source/img/timeline-clock.gif","hash":"e1f3e1061a38e9dcaa26963ab809ba0a70bb8221","modified":1534675828686},{"_id":"themes/ejazhussain/source/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1534675828688},{"_id":"themes/ejazhussain/source/js/app.js","hash":"e90136300e3d339d03e9ebc883a4b761e041645d","modified":1550044135186},{"_id":"themes/ejazhussain/source/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1534675828690},{"_id":"themes/ejazhussain/source/js/jquery.fitvids.js","hash":"498d2b1a5cfd53ce9b320c9ccd7d53ea7b04ffb7","modified":1534675828704},{"_id":"themes/ejazhussain/source/js/scroll.js","hash":"6fd134050d33dd9afdfa7862132f74d1c90cd77a","modified":1534675828707},{"_id":"themes/ejazhussain/source/js/search.js","hash":"a853a37dcd4b0d1f7dbcedabf744b9a73de58427","modified":1534675828718},{"_id":"themes/ejazhussain/source/fonts/selection.json","hash":"63e57a0fdd6138c8872f8cafa24b951eaf9fd564","modified":1534675828453},{"_id":"themes/ejazhussain/source/fonts/icomoon.eot","hash":"931a892fd6307c0cfcbb71511ad4a38b3dd20edf","modified":1534675828409},{"_id":"themes/ejazhussain/source/fonts/icomoon.ttf","hash":"6192fb2b38c94f77d1fed08c1969fab5ffe9a30c","modified":1534675828433},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/create-new-azure-app-insight.png","hash":"698da5aacd6adfe9fcb68900cea42cb819964232","modified":1536507469623},{"_id":"themes/ejazhussain/source/fonts/icomoon.woff","hash":"0356e9be814a04187c641371fd95a7a8d9111200","modified":1534675828441},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/post-featured.png","hash":"554fac778f362c89798d782119669b1ec4f0f1fa","modified":1536521916211},{"_id":"source/_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016/post-featured.png","hash":"867ea722a29e1c7fdb131a19af65949db1872cb2","modified":1535527034813},{"_id":"source/_posts/azure-appinsight-configurations-using-spfx-customizer/post-featured.png","hash":"1d41118ce2ff6df8f08031a6c1fe857306613cb5","modified":1544991920860},{"_id":"source/_posts/azure-blob-storage-using-node/post-featured.png","hash":"f153ea8a946bb00e85f09510b49810e11fecb0cb","modified":1545668589933},{"_id":"source/_posts/list-json-formatting/post-featured.png","hash":"748ef3c232a19cd021279754764f8f46d5325691","modified":1551652802571},{"_id":"source/_posts/list-json-formatting/profile-card.png","hash":"44dc13367f6531b6aee2bef8a89aefcee4cda3ee","modified":1551631925222},{"_id":"source/_posts/sharepoint-approval-task-using-flow/approve-reject-comments.png","hash":"60bb3a3bca5cea11aee5ed24e076f61591a5989b","modified":1552233056066},{"_id":"source/_posts/sharepoint-approval-task-using-flow/complete-flow-steps.png","hash":"8c45e4f1d7f3a713852464532f04529726e811ba","modified":1552234009381},{"_id":"source/_posts/sharepoint-approval-task-using-flow/confirmation-email.png","hash":"d3f06c6aae805787916dc0fe2659247dc293db4c","modified":1552233023384},{"_id":"themes/ejazhussain/source/sass/.DS_Store","hash":"ec4d49422b2bb4a0df71cdeb9f1a896c1801a924","modified":1534675828720},{"_id":"source/_posts/sharepoint-approval-task-using-flow/content-approval-status.png","hash":"afa31a49cccc59d2b43fdf6d87d33cbec39f3f99","modified":1552236775561},{"_id":"source/_posts/sharepoint-approval-task-using-flow/flow-checker.png","hash":"58e0ee8226fc10ea3ca078f8f67f800d558c0cae","modified":1552237376691},{"_id":"source/_posts/sharepoint-approval-task-using-flow/flow-blank-template.png","hash":"ee8d6f18d9db0cc952b044772aac126a0798f0e2","modified":1552233352624},{"_id":"source/_posts/sharepoint-approval-task-using-flow/item-created-modified.png","hash":"907ce9f6068384227a04c5961c7ca885d104bcda","modified":1552234356040},{"_id":"source/_posts/sharepoint-approval-task-using-flow/get-file-metadata.png","hash":"a55ba2dfb3917b05b0332eced45330737e778478","modified":1552235417198},{"_id":"source/_posts/sharepoint-approval-task-using-flow/list-approver-response.png","hash":"b7ec07a98cbc7a8ea1b55bbba19568e285cd9398","modified":1552238501956},{"_id":"source/_posts/sharepoint-approval-task-using-flow/post-featured.png","hash":"4358c6a89127719b459b09b7f752bdfe42265174","modified":1552229080977},{"_id":"source/_posts/sharepoint-approval-task-using-flow/project-list.png","hash":"bc618ee65c79ce22122132e122bc31af0d2e2bda","modified":1552233142748},{"_id":"source/_posts/sharepoint-approval-task-using-flow/send-email-action.png","hash":"4171f57361c564285c90a57aab2f4bd885c02d1e","modified":1552237138301},{"_id":"source/_posts/sharepoint-approval-task-using-flow/start-approval-action.png","hash":"aaad6035742046fc44b6ee8f15fcb6f0397fac87","modified":1552235685284},{"_id":"source/_posts/spfx-image-gallery/post-featured.png","hash":"3c0e54d66584d04052fe013265a9db4326149738","modified":1549804875491},{"_id":"source/_posts/spfx-image-gallery/spfx-image-gallery-with-panel.png","hash":"c7576283800d826b08a8d080ac2ea4d8f7a510c4","modified":1549791666000},{"_id":"source/_posts/spfx-image-gallery/spfx-image-gallery.png","hash":"78ef106e034a455b8f4b30d12e2f01a63a90ea07","modified":1549791621000},{"_id":"themes/ejazhussain/layout/_widget/links.ejs","hash":"9634db1722323a0637a8e8cbe82d4363b1c2d293","modified":1534675828379},{"_id":"themes/ejazhussain/source/img/banner-pc.jpg","hash":"29583a518d41a583371f95c3225916deff1e59dd","modified":1534675828545},{"_id":"themes/ejazhussain/source/img/banner.jpg","hash":"e1d7853fb02b68ee6adcc2d9b3ca647bc802e9a9","modified":1534675828594},{"_id":"themes/ejazhussain/source/sass/template/code.sass","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551641704188},{"_id":"source/_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016/featured.png","hash":"112f31b670390dab7229fddefd2f931cb87f610a","modified":1534675828150},{"_id":"source/_posts/sharepoint-approval-task-using-flow/conditon.png","hash":"e516511182d6c7c9d01539aa9777aeba58450af7","modified":1552236454010},{"_id":"source/about/index/about.jpg","hash":"5fe63645d5dc28c2e4eb42c6c4a7ff5641b111e3","modified":1534675828193},{"_id":"themes/ejazhussain/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1536416435763},{"_id":"themes/ejazhussain/layout/_partial/post/categories.ejs","hash":"03229d5a596781b08cce905a5ebf42ca49e1ac87","modified":1534675828343},{"_id":"themes/ejazhussain/layout/_partial/post/nav.ejs","hash":"e99ca2902c980013cd19e859afe64c7bd3cc176d","modified":1534675828354},{"_id":"themes/ejazhussain/layout/_partial/post/reward.ejs","hash":"f82c4eb8fe0439c29cef1ec33c88314257ed4528","modified":1534675828357},{"_id":"themes/ejazhussain/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1534675828350},{"_id":"themes/ejazhussain/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1534675828352},{"_id":"themes/ejazhussain/layout/_partial/post/copyright.ejs","hash":"3aa84af1521d87025d2b6fc35845ce763791dfa6","modified":1534675828348},{"_id":"themes/ejazhussain/layout/_partial/post/title.ejs","hash":"577659dc67c89ef0a45dae5d715f20f4a48f8c6a","modified":1534675828364},{"_id":"themes/ejazhussain/layout/_partial/post/toc.ejs","hash":"2bacbd35c4a1e64d96e80ddacebb33dd37d700d5","modified":1536504187686},{"_id":"themes/ejazhussain/source/img/logo.png","hash":"fb5df8c3ae5026feb427b0dd385e8fab4ee9c81c","modified":1534675828683},{"_id":"themes/ejazhussain/source/sass/base/_all.sass","hash":"4bdccf821dfec4ed8291667b28703b38f67f5969","modified":1534675828723},{"_id":"themes/ejazhussain/layout/_partial/post/share.ejs","hash":"b58e4c1f28d2430c6b992b434a6dc0cdf80f75a1","modified":1534675828359},{"_id":"themes/ejazhussain/layout/_partial/post/tag.ejs","hash":"db22ee8d49fbfbf2e9ac84ca2d9cdbb8ff148d09","modified":1536416834367},{"_id":"themes/ejazhussain/source/sass/base/generic.sass","hash":"5f87e89de497943563763313d0a47d21b5675d7c","modified":1545669067982},{"_id":"themes/ejazhussain/source/sass/base/helpers.sass","hash":"1e8dfe83edfdec57559bf35674b23bfb92d444a4","modified":1545669111127},{"_id":"themes/ejazhussain/source/sass/base/minireset.sass","hash":"5e0feae99737fd1a2d7e7c935117c0a64742e054","modified":1534675828731},{"_id":"themes/ejazhussain/source/sass/components/_all.sass","hash":"b624fb73a16c8f6adf29ce00b40b13ee2f41a644","modified":1534675828733},{"_id":"themes/ejazhussain/source/sass/components/breadcrumb.sass","hash":"f2ba1e6b632f57699469a1b3aa4c0c2aedaf791b","modified":1534675828741},{"_id":"themes/ejazhussain/source/sass/components/card.sass","hash":"342bccbd5be3b2f5486a4760255e2e8ec5ce329c","modified":1534675828743},{"_id":"themes/ejazhussain/source/sass/components/dropdown.sass","hash":"fbceceae94d4c9e8c0f0d2732d1d5b916e08c111","modified":1534675828746},{"_id":"themes/ejazhussain/source/sass/components/media.sass","hash":"9f664dbc93c4a6a506386efac18c2b09372f4707","modified":1534675828751},{"_id":"themes/ejazhussain/source/sass/components/level.sass","hash":"faaea28cbbecd6b648a387e4f5ccaaa317061fce","modified":1534675828748},{"_id":"themes/ejazhussain/source/sass/components/menu.sass","hash":"e84af39dc68bcc5b1c03068f5e25008b884e5d45","modified":1534675828754},{"_id":"themes/ejazhussain/source/sass/components/modal.sass","hash":"b1061b0b73559c47cd1616b63ee987949ff5c413","modified":1534675828760},{"_id":"themes/ejazhussain/source/sass/components/message.sass","hash":"4fefffee7fc31168883c17968856073453e39632","modified":1534675828757},{"_id":"themes/ejazhussain/source/sass/components/navbar.sass","hash":"5306b97893a61e0c1047d714e1ec0fe9c233df62","modified":1534675828763},{"_id":"themes/ejazhussain/source/sass/components/panel.sass","hash":"c99b4a9c8c4fa1edd9a2ef2763323dbe7a2a3d39","modified":1534675828767},{"_id":"themes/ejazhussain/source/sass/components/pagination.sass","hash":"92b7ad21ff302bd4cf25d65a9f117c12ffd1eb1b","modified":1534675828765},{"_id":"themes/ejazhussain/source/sass/components/tabs.sass","hash":"8c16d850fd20b353753164a8ee46526b09ffd875","modified":1534675828769},{"_id":"themes/ejazhussain/source/sass/elements/_all.sass","hash":"91faa0987b4c9fa755dc61cd4b7a57b72293fe6b","modified":1534675828772},{"_id":"themes/ejazhussain/source/sass/elements/box.sass","hash":"b07ed1eb99ada5425d21c591211ddf9b3e93c448","modified":1534675828774},{"_id":"themes/ejazhussain/source/sass/elements/button.sass","hash":"1e85064ab982af26591d5ccd15e7a113c9a68b86","modified":1534675828777},{"_id":"themes/ejazhussain/source/sass/elements/form.sass","hash":"ce52f692014d8d47e7871330de785f18e84d13aa","modified":1534675828796},{"_id":"themes/ejazhussain/source/sass/elements/content.sass","hash":"77b073ec5c162b4236d7f87d497da434e4badf80","modified":1534675828794},{"_id":"themes/ejazhussain/source/sass/elements/icon.sass","hash":"8a8289911ce7157d65e08849ba9822ef305cd5b4","modified":1534675828799},{"_id":"themes/ejazhussain/source/sass/elements/image.sass","hash":"e7b94a4fdf3997cce0fda7b20b996cffbd2e6cc5","modified":1537119318538},{"_id":"themes/ejazhussain/source/sass/elements/notification.sass","hash":"9ee83893a4b99425ddbe138a2639b62f2f6f37bd","modified":1534675828803},{"_id":"themes/ejazhussain/source/sass/elements/other.sass","hash":"47c20a6d71ad9f75df8fcc0e443514f0b66936df","modified":1534675828805},{"_id":"themes/ejazhussain/source/sass/elements/container.sass","hash":"cddbcedbef929d553b5d71cb505e53de031982f6","modified":1534675828780},{"_id":"themes/ejazhussain/source/sass/elements/table.sass","hash":"3b2d814b30f358111ea8cd8617e7529809ed64f4","modified":1534675828808},{"_id":"themes/ejazhussain/source/sass/elements/tag.sass","hash":"cb272a134ec0c20049740f408b801b0f5ed84443","modified":1534675828810},{"_id":"themes/ejazhussain/source/sass/layout/_all.sass","hash":"0bd795663e6ebc74251ec6c448cd1124dd9cef30","modified":1534675828821},{"_id":"themes/ejazhussain/source/sass/elements/title.sass","hash":"95a585b54458a886b9ee721b02b888941457d6a2","modified":1534675828812},{"_id":"themes/ejazhussain/source/sass/layout/footer.sass","hash":"a440b5b4116e3e09abb0372bd4da2137214a0f24","modified":1534675828823},{"_id":"themes/ejazhussain/source/sass/layout/hero.sass","hash":"3c6fb4f7a35d0a231f6bde4dfee63c2de486831f","modified":1534675828826},{"_id":"themes/ejazhussain/source/sass/layout/section.sass","hash":"845108b47b6d7962cde0f176933367ffcc4a814c","modified":1534675828828},{"_id":"themes/ejazhussain/source/sass/grid/columns.sass","hash":"2ed31e99c5479b1775864f877b3976438a2622ff","modified":1534675828817},{"_id":"themes/ejazhussain/source/sass/elements/progress.sass","hash":"82998cd868434d03aaddb77cd01f7a9c1eaf8c81","modified":1534675828806},{"_id":"themes/ejazhussain/source/sass/template/_all.sass","hash":"62c56561041b8d900cb458129c79cad8f5827f18","modified":1551641698508},{"_id":"themes/ejazhussain/source/sass/grid/tiles.sass","hash":"e7bf79f3b0e110d4ecf4ddf1436a111fae1cae1d","modified":1534675828819},{"_id":"themes/ejazhussain/source/sass/template/app.scss","hash":"e10f25203679934e17b45f8215391fe08015d53c","modified":1551639667466},{"_id":"themes/ejazhussain/source/sass/template/article.scss","hash":"17085bd102f9ec47e96eeae053e98a36dd601e63","modified":1551639594496},{"_id":"themes/ejazhussain/source/sass/grid/_all.sass","hash":"c58e716b377496b748ff5a28d593980df74ae598","modified":1534675828814},{"_id":"themes/ejazhussain/source/sass/template/footer.scss","hash":"97fedba517cfe56523b2fa9071713b1a9042f244","modified":1534675828836},{"_id":"themes/ejazhussain/source/sass/template/layout.scss","hash":"b2f146e57c042aa0aa90bd9e309463306e002050","modified":1545666925882},{"_id":"themes/ejazhussain/source/sass/template/header.scss","hash":"92ecd3a492226a993e909017f7a39bcb4cfecdf3","modified":1534675828838},{"_id":"themes/ejazhussain/source/sass/template/mixin.scss","hash":"3d4f662a41010faca7ba1db84bfa55f1f7d74684","modified":1534675828842},{"_id":"themes/ejazhussain/source/sass/template/pagination.scss","hash":"986153fe4b03593c00783529ffde787e2a126795","modified":1534675828843},{"_id":"themes/ejazhussain/source/sass/template/posts.scss","hash":"fdbb868086b639364826eb31610616097aa920a9","modified":1549798002249},{"_id":"themes/ejazhussain/source/sass/template/profilecard.scss","hash":"0b6b2b21c00e7b506ad675d86944a913da069608","modified":1545666174730},{"_id":"themes/ejazhussain/source/sass/template/queries.scss","hash":"8cf8348871a87ea1e0a6e2a27b8b8d2b37fc1d9b","modified":1536166044371},{"_id":"themes/ejazhussain/source/sass/template/search.scss","hash":"01bcefb1d48c8011cb44e6e80a92ce9e860ca133","modified":1534675828859},{"_id":"themes/ejazhussain/source/sass/template/sidebar.scss","hash":"045fa577733849595a97cb976c6097a682a6943b","modified":1545667153951},{"_id":"themes/ejazhussain/source/sass/template/tags.scss","hash":"77e02c467bb45b552587f72261bedaab016084dc","modified":1535436141234},{"_id":"themes/ejazhussain/source/sass/utilities/_all.sass","hash":"f193ad57bc9f4f1616a36a9ca623d473d58cce75","modified":1534675828869},{"_id":"themes/ejazhussain/source/sass/template/timeline.scss","hash":"bb17c711a74aed47a188db06edc97e3c97cdc10c","modified":1534682393714},{"_id":"themes/ejazhussain/source/sass/utilities/functions.sass","hash":"668f0dd9c4b3700da62e4584a97aa63a20fb235a","modified":1534675828878},{"_id":"themes/ejazhussain/source/sass/utilities/animations.sass","hash":"8085c96403bd0a54293ecfa9b2ded61f10a1aad0","modified":1534675828871},{"_id":"themes/ejazhussain/source/sass/utilities/derived-variables.sass","hash":"e5c0bc1acf40f2b0dfc99252e363330070e73a2a","modified":1534675828876},{"_id":"themes/ejazhussain/source/sass/utilities/controls.sass","hash":"e1743039edbc34a6d8133a25706914217eff16e5","modified":1534675828873},{"_id":"themes/ejazhussain/source/sass/utilities/mixins.sass","hash":"5b2b8532fe01bdb18dc606722f2fbf2eb870ede9","modified":1545669340688},{"_id":"source/_posts/sharepoint-approval-task-using-flow/task-notification-email.png","hash":"1f4e7ce9e3b22241b18157d024bea5d738caa5d7","modified":1552237667781},{"_id":"source/images/profile.png","hash":"0fbad11245524b18e01ea2b9db1fbdd3fe94c894","modified":1537091157807},{"_id":"themes/ejazhussain/source/sass/utilities/initial-variables.sass","hash":"0666b5cf37fc5ba12ef4b264a4ab552f780e3ab2","modified":1545669465277},{"_id":"source/images/about.jpg","hash":"a97c9f444ad256f09c48bf94ffc84e0798dae790","modified":1534675828261},{"_id":"themes/ejazhussain/source/img/banner-pc-tea.jpg","hash":"03d23df8d859ace104170e0b7b021894595e46ec","modified":1534675828513},{"_id":"themes/ejazhussain/source/img/logo.jpg","hash":"9e9acecebe656ae6b6ae9b3844a8f48c44ca76aa","modified":1534675828668},{"_id":"public/atom.xml","hash":"47b3ec5a92c9a1dfd0208b972e359830615503e7","modified":1554664629866},{"_id":"public/content.json","hash":"b1cffddcf650c81b8c2ec45be9354a9aba0b89ca","modified":1554664629982},{"_id":"public/sitemap.xml","hash":"faed7b8cab2cbfd0f528a4771f6c311933e639cd","modified":1554664630028},{"_id":"public/search.xml","hash":"0ab3f68ab9ca4178461109c0662225cc91a55f8e","modified":1554664629869},{"_id":"public/about/index.html","hash":"6c251df08ae5412d7116d66bf5bd01db475005dc","modified":1554664630038},{"_id":"public/2019/04/07/spfx-office365-reports/index.html","hash":"476a6bcdb4d965e4fa33d77fe0d4506adc0e8967","modified":1554664630038},{"_id":"public/2019/03/03/list-json-formatting/index.html","hash":"6531eb39d9c4a0b6bd9e546eff8961b224ceee01","modified":1554664630038},{"_id":"public/2019/02/08/spfx-image-gallery/index.html","hash":"a6dfec3b9c34bc4935ff33851dd78f255356ead9","modified":1554664630038},{"_id":"public/2018/12/23/azure-blob-storage-using-node/index.html","hash":"e746303b423e0efdc8646d15619b76f871bda645","modified":1554664630038},{"_id":"public/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/index.html","hash":"a89a2fa2b11db118da69a670ae2fad713f2c096f","modified":1554664630038},{"_id":"public/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/index.html","hash":"083a7efe5c9b4f8b4a47e21a9c77c2e7ad63ed1e","modified":1554664630038},{"_id":"public/2018/08/16/Sign-In-As-Different-User-In-SharePoint-2013-2016/index.html","hash":"329d446cc8ae2e407d465cb2bc18cd01552f2a67","modified":1554664630038},{"_id":"public/archives/index.html","hash":"94e8dfcac62a0083ce4df4ddfc9b5a1f4a02d98f","modified":1554664630038},{"_id":"public/archives/page/2/index.html","hash":"a2a692aaff0a748a5437d7278cbe6eb725d0f1fe","modified":1554664630038},{"_id":"public/archives/2018/index.html","hash":"0d47985528992656e82d3ee71875e43ad7842f69","modified":1554664630038},{"_id":"public/archives/2018/08/index.html","hash":"7607644bb723fc5351715310e48ac534b09920d7","modified":1554664630038},{"_id":"public/archives/2018/09/index.html","hash":"68a7d7534523a76fa72a0a1208259a2f12830871","modified":1554664630038},{"_id":"public/archives/2018/12/index.html","hash":"a63adc7d6b35c9a16ff105e28cdd4df23f88a7bb","modified":1554664630038},{"_id":"public/archives/2019/index.html","hash":"78cca187b24b83f038908338d15c6c493894fad6","modified":1554664630038},{"_id":"public/archives/2019/02/index.html","hash":"233ad2bd7a71c5f28acc8cebcbac532249cf6589","modified":1554664630038},{"_id":"public/archives/2019/03/index.html","hash":"d3d1e29a87126d4b6cdc81589cc479caba04811b","modified":1554664630038},{"_id":"public/archives/2019/04/index.html","hash":"46381d3caa2c172c3f9f8b99e052f78a011a2263","modified":1554664630038},{"_id":"public/categories/PowerShell/index.html","hash":"5eda57e0385de3cdcd92eff55605240630e92d5c","modified":1554664630038},{"_id":"public/page/2/index.html","hash":"b0e9bbb4658d1bdc3231c50ac796744915705f8c","modified":1554664630038},{"_id":"public/tags/Sharepoint-TermStore/index.html","hash":"9fc1e1ad3abb45fd1c5d50a7abd73de5cd3eabf9","modified":1554664630038},{"_id":"public/tags/PnP-PowerShell/index.html","hash":"6fdbce481c809836c748eb46ab61a83ee0cea7a9","modified":1554664630038},{"_id":"public/tags/SharePoint-administration/index.html","hash":"03885d7bc615150665bb8c6c6670dc772466c07c","modified":1554664630038},{"_id":"public/tags/SharePoint-2013/index.html","hash":"1ce3c1fc3c3149dbd01050144f2756e7e838d3e6","modified":1554664630038},{"_id":"public/tags/SharePoint-2016/index.html","hash":"2964af20ea8f454fb156ccced6f126d475801164","modified":1554664630038},{"_id":"public/tags/Azure-Application-Insight/index.html","hash":"566193d0d2d43a4d955c18aba50483847889098b","modified":1554664630038},{"_id":"public/tags/Azure/index.html","hash":"d58735529c23226049f8b611d5c5d2a2eb88d7e7","modified":1554664630038},{"_id":"public/tags/Analytics/index.html","hash":"61b4afe34dc7605a2ef0a810013f60de5e30189e","modified":1554664630038},{"_id":"public/tags/SharePoint-Online/index.html","hash":"2fe5ddf21a71969d0385d68613aa9f67dd9812ea","modified":1554664630038},{"_id":"public/tags/Azure-Blog-Storage/index.html","hash":"946598a885d20c02d0d83a2ffe88d8d5ae6dfe70","modified":1554664630038},{"_id":"public/tags/Node-JS/index.html","hash":"843f5a20c762049eaa804c3d2ea79c703ff09682","modified":1554664630038},{"_id":"public/tags/SPFX/index.html","hash":"bf32f3c1791cf8fa9850c6a1af956ca9afd2b662","modified":1554664630038},{"_id":"public/tags/Office-UI-Fabric/index.html","hash":"0e22d1fb5e5aceccb3cbc18808a04d4afd6aefb9","modified":1554664630038},{"_id":"public/tags/Modern-SharePoint/index.html","hash":"887e27b6be541d978711368182051305357b6892","modified":1554664630038},{"_id":"public/tags/Azure-App-Insights/index.html","hash":"acf7ec236440891d0af6a4a8ce600f2a37b02bf2","modified":1554664630038},{"_id":"public/tags/Application-Customizer/index.html","hash":"210f777259ee9e15f38aab3c0a8a008a28bff9ab","modified":1554664630038},{"_id":"public/tags/Modern-SharePoint-List/index.html","hash":"e8ca65c3c2df39c80b872f7175e011c7e80d68c1","modified":1554664630038},{"_id":"public/tags/JSON-Formatting/index.html","hash":"711cf279278839ba7be14eb0ecaa089ad6faa22c","modified":1554664630038},{"_id":"public/tags/Microsoft-Flow/index.html","hash":"7fcb27fcc9adc51c33b3f33cae6b00d6a1bfd1ae","modified":1554664630038},{"_id":"public/tags/Workflow/index.html","hash":"cab45075b9068289cdad906d436ab30242a4ee79","modified":1554664630038},{"_id":"public/tags/Microsoft-Graph-API/index.html","hash":"186eb82e1a8e0198186591e847cb168137f57b73","modified":1554664630038},{"_id":"public/tags/Charts/index.html","hash":"6621c99c257d136e2acaa0c36bc38709ccc8293a","modified":1554664630038},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/index.html","hash":"c499a8f67045a77fd02c1eba764f2bd8f06cf900","modified":1554664630038},{"_id":"public/2018/08/27/Import-Terms-From-CSV/index.html","hash":"1218d759168fdb37a34d83a82d60df1f962a7ad8","modified":1554664630038},{"_id":"public/index.html","hash":"a56e213dfdb9972ebbbf754974db6f0f97eda60f","modified":1554664630038},{"_id":"public/images/header-background.svg","hash":"33c1473426f5d518e073708f58b6147abc250745","modified":1554664485624},{"_id":"public/images/code.svg","hash":"ac38cfd4b89734536d02cd3d0c6d690afb2e980d","modified":1554664485624},{"_id":"public/robots.txt","hash":"19c6e02fa4cb963d8c20876346a613a50ba86716","modified":1554664485624},{"_id":"public/fonts/icomoon.svg","hash":"d2f6755d619e577d90537e7e92640a2e1b833f6f","modified":1554664485624},{"_id":"public/img/background.svg","hash":"33c1473426f5d518e073708f58b6147abc250745","modified":1554664485624},{"_id":"public/img/timeline-clock.gif","hash":"e1f3e1061a38e9dcaa26963ab809ba0a70bb8221","modified":1554664485624},{"_id":"public/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1554664485624},{"_id":"public/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1554664485624},{"_id":"public/images/favicon.ico","hash":"57e19c18bfe2f77a1bc3229dc104114dc171ce72","modified":1554664485624},{"_id":"public/fonts/icomoon.ttf","hash":"6192fb2b38c94f77d1fed08c1969fab5ffe9a30c","modified":1554664485624},{"_id":"public/fonts/icomoon.eot","hash":"931a892fd6307c0cfcbb71511ad4a38b3dd20edf","modified":1554664485624},{"_id":"public/fonts/icomoon.woff","hash":"0356e9be814a04187c641371fd95a7a8d9111200","modified":1554664485624},{"_id":"public/2019/04/07/spfx-office365-reports/post-featured.png","hash":"948817b260f710f05a5e3b33f418e108df1dacc7","modified":1554664485624},{"_id":"public/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/custom-properties.png","hash":"5d69b91ed0144937382e23a081f84820c15dd4ed","modified":1554664485624},{"_id":"public/2018/08/27/Import-Terms-From-CSV/groups.csv","hash":"dd689ba0e997104b7b95982b356a60630e03944a","modified":1554664485624},{"_id":"public/2018/08/27/Import-Terms-From-CSV/samplecsv.png","hash":"c2e5be5e134fb673f398e41b512d6415e0bbb908","modified":1554664485624},{"_id":"public/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/customevents.png","hash":"260efd30e5415bd25a6f128440ad0cd4a429ddda","modified":1554664485624},{"_id":"public/2018/08/27/Import-Terms-From-CSV/post-featured.png","hash":"095a5343c66aaa0e4c78967426bd20b68d5324e9","modified":1554664485624},{"_id":"public/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/js-code-snippet.png","hash":"105df3e9a41c7f0d24a39887053805be1803b944","modified":1554664485624},{"_id":"public/2019/02/08/spfx-image-gallery/taxonomy-query.png","hash":"ff5399f40f9947021edbc0f30ab5e29d9912737e","modified":1554664485624},{"_id":"public/css/prism-coy.css","hash":"4fa2430da574de3c20f6173c21d9084a8fa0eca3","modified":1554664485624},{"_id":"public/css/prism-line-numbers.css","hash":"e0db113a99e4a09d2161a539b1652d96e4a22fac","modified":1554664485624},{"_id":"public/js/prism.js","hash":"a80f68af3f8d7cbca0667fbe75294db96f847098","modified":1554664485624},{"_id":"public/js/prism-line-numbers.min.js","hash":"6ee7a0d34694440a82cf0e694df3b292b7f12b15","modified":1554664485624},{"_id":"public/github-card-lib/githubcard.js","hash":"abec4decf5532b77beafc6194599f3a402a91201","modified":1554664485624},{"_id":"public/images/avatar.jpg","hash":"445c00332b7f381b21820ea422e5bc7f4f236aaa","modified":1554664486179},{"_id":"public/img/banner-pc.jpg","hash":"29583a518d41a583371f95c3225916deff1e59dd","modified":1554664486469},{"_id":"public/img/banner.jpg","hash":"e1d7853fb02b68ee6adcc2d9b3ca647bc802e9a9","modified":1554664486470},{"_id":"public/2018/12/23/azure-blob-storage-using-node/post-featured.png","hash":"f153ea8a946bb00e85f09510b49810e11fecb0cb","modified":1554664486473},{"_id":"public/2018/08/16/Sign-In-As-Different-User-In-SharePoint-2013-2016/post-featured.png","hash":"867ea722a29e1c7fdb131a19af65949db1872cb2","modified":1554664486473},{"_id":"public/2019/03/03/list-json-formatting/post-featured.png","hash":"748ef3c232a19cd021279754764f8f46d5325691","modified":1554664486473},{"_id":"public/2019/03/03/list-json-formatting/profile-card.png","hash":"44dc13367f6531b6aee2bef8a89aefcee4cda3ee","modified":1554664486474},{"_id":"public/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/post-featured.png","hash":"1d41118ce2ff6df8f08031a6c1fe857306613cb5","modified":1554664486474},{"_id":"public/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/create-new-azure-app-insight.png","hash":"698da5aacd6adfe9fcb68900cea42cb819964232","modified":1554664486474},{"_id":"public/2019/02/08/spfx-image-gallery/spfx-image-gallery-with-panel.png","hash":"c7576283800d826b08a8d080ac2ea4d8f7a510c4","modified":1554664486474},{"_id":"public/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/post-featured.png","hash":"554fac778f362c89798d782119669b1ec4f0f1fa","modified":1554664486474},{"_id":"public/2019/02/08/spfx-image-gallery/post-featured.png","hash":"3c0e54d66584d04052fe013265a9db4326149738","modified":1554664486474},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/approve-reject-comments.png","hash":"60bb3a3bca5cea11aee5ed24e076f61591a5989b","modified":1554664486475},{"_id":"public/2019/02/08/spfx-image-gallery/spfx-image-gallery.png","hash":"78ef106e034a455b8f4b30d12e2f01a63a90ea07","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/confirmation-email.png","hash":"d3f06c6aae805787916dc0fe2659247dc293db4c","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/complete-flow-steps.png","hash":"8c45e4f1d7f3a713852464532f04529726e811ba","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/flow-blank-template.png","hash":"ee8d6f18d9db0cc952b044772aac126a0798f0e2","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/flow-checker.png","hash":"58e0ee8226fc10ea3ca078f8f67f800d558c0cae","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/get-file-metadata.png","hash":"a55ba2dfb3917b05b0332eced45330737e778478","modified":1554664486475},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/item-created-modified.png","hash":"907ce9f6068384227a04c5961c7ca885d104bcda","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/content-approval-status.png","hash":"afa31a49cccc59d2b43fdf6d87d33cbec39f3f99","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/project-list.png","hash":"bc618ee65c79ce22122132e122bc31af0d2e2bda","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/post-featured.png","hash":"4358c6a89127719b459b09b7f752bdfe42265174","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/send-email-action.png","hash":"4171f57361c564285c90a57aab2f4bd885c02d1e","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/list-approver-response.png","hash":"b7ec07a98cbc7a8ea1b55bbba19568e285cd9398","modified":1554664486476},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/start-approval-action.png","hash":"aaad6035742046fc44b6ee8f15fcb6f0397fac87","modified":1554664486477},{"_id":"public/sass/base/generic.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/base/helpers.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/breadcrumb.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/card.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/dropdown.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/level.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/media.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/menu.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486490},{"_id":"public/sass/components/modal.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/components/navbar.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/components/tabs.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/components/message.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/box.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/components/pagination.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/components/panel.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/form.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/button.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/image.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/container.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486491},{"_id":"public/sass/elements/notification.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/elements/other.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/elements/table.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/elements/title.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/elements/tag.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/layout/hero.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/grid/columns.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/layout/footer.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/layout/section.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/grid/tiles.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/elements/progress.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/template/app.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/template/article.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486492},{"_id":"public/sass/template/footer.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/layout.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/profilecard.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/tags.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/search.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/sidebar.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/template/timeline.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486493},{"_id":"public/sass/utilities/derived-variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486494},{"_id":"public/sass/utilities/controls.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486494},{"_id":"public/sass/utilities/mixins.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486494},{"_id":"public/js/app.js","hash":"52e01748b826e502982b9c432cfd3cff161e528b","modified":1554664486494},{"_id":"public/js/jquery.fitvids.js","hash":"57946a22c79654014eb00fb548f727d302221873","modified":1554664486494},{"_id":"public/js/scroll.js","hash":"1395f8539dd3ae053e39cfd491ab6f9419d2ed84","modified":1554664486494},{"_id":"public/sass/template/code.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486494},{"_id":"public/sass/base/minireset.css","hash":"90543c3b8ff4e0050b432a85a1e3d09049b90147","modified":1554664486494},{"_id":"public/sass/elements/icon.css","hash":"a4b87ac0369da1cacde53068438c8b882da8d587","modified":1554664486494},{"_id":"public/sass/template/header.css","hash":"b1edabb5b9f193baa31624d7e5196b6e8e597719","modified":1554664486495},{"_id":"public/sass/template/mixin.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486495},{"_id":"public/sass/template/posts.css","hash":"a47f3677662297e097d94f6ee5c60f60b99a7f1a","modified":1554664486495},{"_id":"public/sass/template/pagination.css","hash":"9b2a4fc0d0de3c826e3cb5c71422f647ad7f2676","modified":1554664486495},{"_id":"public/sass/template/queries.css","hash":"ff9da80219710016ed362c4840d1f0df866531c1","modified":1554664486495},{"_id":"public/sass/utilities/functions.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486495},{"_id":"public/sass/utilities/animations.css","hash":"35ed5f779dc3e3a96e5ec48c6d7be450ca56591d","modified":1554664486495},{"_id":"public/sass/utilities/initial-variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486495},{"_id":"public/js/search.js","hash":"f31469c60ec33212309f592fc4cec5b7750133cc","modified":1554664486495},{"_id":"public/fonts/selection.json","hash":"c38f13105ee7c35a67476dd80eaa2ffd037c124b","modified":1554664486495},{"_id":"public/bulma.css","hash":"990b3fffa7737a4780598da304c70b1f669cb0c3","modified":1554664486496},{"_id":"public/about/index/about.jpg","hash":"5fe63645d5dc28c2e4eb42c6c4a7ff5641b111e3","modified":1554664486496},{"_id":"public/img/logo.png","hash":"fb5df8c3ae5026feb427b0dd385e8fab4ee9c81c","modified":1554664486496},{"_id":"public/2018/08/16/Sign-In-As-Different-User-In-SharePoint-2013-2016/featured.png","hash":"112f31b670390dab7229fddefd2f931cb87f610a","modified":1554664486496},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/conditon.png","hash":"e516511182d6c7c9d01539aa9777aeba58450af7","modified":1554664486496},{"_id":"public/2019/03/10/sharepoint-approval-task-using-flow/task-notification-email.png","hash":"1f4e7ce9e3b22241b18157d024bea5d738caa5d7","modified":1554664486565},{"_id":"public/style.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554664486582},{"_id":"public/images/profile.png","hash":"0fbad11245524b18e01ea2b9db1fbdd3fe94c894","modified":1554664486582},{"_id":"public/img/banner-pc-tea.jpg","hash":"03d23df8d859ace104170e0b7b021894595e46ec","modified":1554664486642},{"_id":"public/img/logo.jpg","hash":"9e9acecebe656ae6b6ae9b3844a8f48c44ca76aa","modified":1554664486656},{"_id":"public/images/about.jpg","hash":"a97c9f444ad256f09c48bf94ffc84e0798dae790","modified":1554664486656}],"Category":[{"name":"PowerShell","_id":"cju7b3di10002kwet4ha2mjjb"}],"Data":[],"Page":[{"title":"About me","date":"2015-11-29T21:00:03.000Z","_content":"\n<div class=\"columns is-desktop\">\n    <div class=\"column is-narrow\">\n        <div class=\"box profile-card\">\n            <figure class=\"image is-128x128\">\n                <img class=\"is-rounded\" src=\"/images/profile.png\">\n            </figure>\n            <div class=\"card-content\">\n                <div class=\"info-headings\">\n                    <h2 class=\"text-uppercase left\">Ejaz Hussain</h2>\n                    <h4 class=\"text-capitalize left\">Lead SharePoint Developer</h4>\n                </div>\n\n                <div class=\"links\">\n                    <!--Email-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"mailto:ejazzhussain@outlook.com\" class=\"social\"><i class=\"fas fa-2x fa-envelope-square\"></i></a>\n                    </span>\n                    <!-- TWITTER-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"https://twitter.com/EjazHussain_\" class=\"social\"><i class=\"fab fa-2x fa-twitter-square\"></i></a>\n                    </span>\n                    <!-- LINKEDIN-->\n                    <span class=\"icon is-medium\">\n                        <a href=\"https://www.linkedin.com/in/ejaz-hussain-1a14ab37/\" class=\"social\"><i class=\"fab fa-2x fa-linkedin\"></i></a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"box\">\n            <div class=\"card-about-content\">\n\n                <p class=\"subtitle\">\n                    Hello! I’m Ejaz Hussain.\n                </p>\n                <p>\n                    Senior SharePoint Developer with over 8 years of experience specializing\n                    in\n                    SharePoint, Office 365 and Azure platforms. Experienced with all stages of the development cycle\n                    for\n                    dynamic web projects.\n                </p>\n                <p>\n                    Currently I am working for <a href=\"https://www.contentandcode.com/\">Content and Code</a> (UK based\n                    Microsoft Partner).\n                </p>\n                <p>My aim is to share my knowledge and experiences around SharePoint, Office\n                    365,\n                    Azure and other Microsoft base technologies.</p>\n                <p>\n                    My life is not all about the SharePoint, I love playing cricket whenever i get chance but now a\n                    days i am into running.\n                </p>\n                <br />\n\n                <p>\n                    If you have suggestions to this blog then feel free to email me directly.\n                    You can also reach me through my personal twitter or the linkedin account.\n\n\n                </p>\n\n            </div>\n        </div>\n    </div>\n</div>","source":"about/index.ejs","raw":"---\ntitle: About me\ndate: 2015-11-29 21:00:03\n---\n\n<div class=\"columns is-desktop\">\n    <div class=\"column is-narrow\">\n        <div class=\"box profile-card\">\n            <figure class=\"image is-128x128\">\n                <img class=\"is-rounded\" src=\"/images/profile.png\">\n            </figure>\n            <div class=\"card-content\">\n                <div class=\"info-headings\">\n                    <h2 class=\"text-uppercase left\">Ejaz Hussain</h2>\n                    <h4 class=\"text-capitalize left\">Lead SharePoint Developer</h4>\n                </div>\n\n                <div class=\"links\">\n                    <!--Email-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"mailto:ejazzhussain@outlook.com\" class=\"social\"><i class=\"fas fa-2x fa-envelope-square\"></i></a>\n                    </span>\n                    <!-- TWITTER-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"https://twitter.com/EjazHussain_\" class=\"social\"><i class=\"fab fa-2x fa-twitter-square\"></i></a>\n                    </span>\n                    <!-- LINKEDIN-->\n                    <span class=\"icon is-medium\">\n                        <a href=\"https://www.linkedin.com/in/ejaz-hussain-1a14ab37/\" class=\"social\"><i class=\"fab fa-2x fa-linkedin\"></i></a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"box\">\n            <div class=\"card-about-content\">\n\n                <p class=\"subtitle\">\n                    Hello! I’m Ejaz Hussain.\n                </p>\n                <p>\n                    Senior SharePoint Developer with over 8 years of experience specializing\n                    in\n                    SharePoint, Office 365 and Azure platforms. Experienced with all stages of the development cycle\n                    for\n                    dynamic web projects.\n                </p>\n                <p>\n                    Currently I am working for <a href=\"https://www.contentandcode.com/\">Content and Code</a> (UK based\n                    Microsoft Partner).\n                </p>\n                <p>My aim is to share my knowledge and experiences around SharePoint, Office\n                    365,\n                    Azure and other Microsoft base technologies.</p>\n                <p>\n                    My life is not all about the SharePoint, I love playing cricket whenever i get chance but now a\n                    days i am into running.\n                </p>\n                <br />\n\n                <p>\n                    If you have suggestions to this blog then feel free to email me directly.\n                    You can also reach me through my personal twitter or the linkedin account.\n\n\n                </p>\n\n            </div>\n        </div>\n    </div>\n</div>","updated":"2018-09-17T06:36:37.794Z","path":"about/index.html","comments":1,"layout":"page","_id":"cju7b3dkg001rkwetpb70lhr9","content":"\n<div class=\"columns is-desktop\">\n    <div class=\"column is-narrow\">\n        <div class=\"box profile-card\">\n            <figure class=\"image is-128x128\">\n                <img class=\"is-rounded\" src=\"/images/profile.png\">\n            </figure>\n            <div class=\"card-content\">\n                <div class=\"info-headings\">\n                    <h2 class=\"text-uppercase left\">Ejaz Hussain</h2>\n                    <h4 class=\"text-capitalize left\">Lead SharePoint Developer</h4>\n                </div>\n\n                <div class=\"links\">\n                    <!--Email-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"mailto:ejazzhussain@outlook.com\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-2x fa-envelope-square\"></i></a>\n                    </span>\n                    <!-- TWITTER-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"https://twitter.com/EjazHussain_\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-2x fa-twitter-square\"></i></a>\n                    </span>\n                    <!-- LINKEDIN-->\n                    <span class=\"icon is-medium\">\n                        <a href=\"https://www.linkedin.com/in/ejaz-hussain-1a14ab37/\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-2x fa-linkedin\"></i></a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"box\">\n            <div class=\"card-about-content\">\n\n                <p class=\"subtitle\">\n                    Hello! I’m Ejaz Hussain.\n                </p>\n                <p>\n                    Senior SharePoint Developer with over 8 years of experience specializing\n                    in\n                    SharePoint, Office 365 and Azure platforms. Experienced with all stages of the development cycle\n                    for\n                    dynamic web projects.\n                </p>\n                <p>\n                    Currently I am working for <a href=\"https://www.contentandcode.com/\" target=\"_blank\" rel=\"noopener\">Content and Code</a> (UK based\n                    Microsoft Partner).\n                </p>\n                <p>My aim is to share my knowledge and experiences around SharePoint, Office\n                    365,\n                    Azure and other Microsoft base technologies.</p>\n                <p>\n                    My life is not all about the SharePoint, I love playing cricket whenever i get chance but now a\n                    days i am into running.\n                </p>\n                <br>\n\n                <p>\n                    If you have suggestions to this blog then feel free to email me directly.\n                    You can also reach me through my personal twitter or the linkedin account.\n\n\n                </p>\n\n            </div>\n        </div>\n    </div>\n</div>","site":{"data":{}},"excerpt":"","more":"\n<div class=\"columns is-desktop\">\n    <div class=\"column is-narrow\">\n        <div class=\"box profile-card\">\n            <figure class=\"image is-128x128\">\n                <img class=\"is-rounded\" src=\"/images/profile.png\">\n            </figure>\n            <div class=\"card-content\">\n                <div class=\"info-headings\">\n                    <h2 class=\"text-uppercase left\">Ejaz Hussain</h2>\n                    <h4 class=\"text-capitalize left\">Lead SharePoint Developer</h4>\n                </div>\n\n                <div class=\"links\">\n                    <!--Email-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"mailto:ejazzhussain@outlook.com\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-2x fa-envelope-square\"></i></a>\n                    </span>\n                    <!-- TWITTER-->\n                    <span class=\"\n                            icon is-medium\">\n                        <a href=\"https://twitter.com/EjazHussain_\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-2x fa-twitter-square\"></i></a>\n                    </span>\n                    <!-- LINKEDIN-->\n                    <span class=\"icon is-medium\">\n                        <a href=\"https://www.linkedin.com/in/ejaz-hussain-1a14ab37/\" class=\"social\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-2x fa-linkedin\"></i></a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"box\">\n            <div class=\"card-about-content\">\n\n                <p class=\"subtitle\">\n                    Hello! I’m Ejaz Hussain.\n                </p>\n                <p>\n                    Senior SharePoint Developer with over 8 years of experience specializing\n                    in\n                    SharePoint, Office 365 and Azure platforms. Experienced with all stages of the development cycle\n                    for\n                    dynamic web projects.\n                </p>\n                <p>\n                    Currently I am working for <a href=\"https://www.contentandcode.com/\" target=\"_blank\" rel=\"noopener\">Content and Code</a> (UK based\n                    Microsoft Partner).\n                </p>\n                <p>My aim is to share my knowledge and experiences around SharePoint, Office\n                    365,\n                    Azure and other Microsoft base technologies.</p>\n                <p>\n                    My life is not all about the SharePoint, I love playing cricket whenever i get chance but now a\n                    days i am into running.\n                </p>\n                <br>\n\n                <p>\n                    If you have suggestions to this blog then feel free to email me directly.\n                    You can also reach me through my personal twitter or the linkedin account.\n\n\n                </p>\n\n            </div>\n        </div>\n    </div>\n</div>"}],"Post":[{"title":"SharePoint Online:Import Terms From CSV","date":"2018-08-27T17:21:56.000Z","description":"SharePoint Online:Import Terms From CSV file","featured_image":"https://www.ejazhussain.com/2018/08/27/Import-Terms-From-CSV/post-featured.png","_content":"## Import Terms to Term Set from CSV using PnP PowerShell.\n\n<strong>Requirement:</strong> Import terms to term set in SharePoint Online from a CSV file using PowerShell.\n\nHere is my sample csv file. [Click here](groups.csv) to download.\n\n{% asset_img samplecsv.png %}\n\n\n\n\n<strong>Assumptions:</strong> Make sure TermSets are present in the term store. Probably i could also add code to check if term already exist etc. But for now i am keeping it simple.\n\n\n\n``` PowerShell\n\n\n# +---------------------------------------------------------------------------+\n# | User defined variables                                                    |\n# +---------------------------------------------------------------------------+\n\n$tenant = \"SPCode\"\n$siteUrl = \"https://spcode.sharepoint.com/\"\n$path = \"C:\\temp\\groups.csv\"\n\n# +---------------------------------------------------------------------------+\n# | Connect to SharePoint                                                  |\n# +---------------------------------------------------------------------------+\n\n#$creds = Get-Credential\n\n\nWrite-Output $(\"Connecting to {0}\" -f $tenant);\nConnect-PnPOnline -Url $siteUrl\n\nwrite-host \"connected with $($siteUrl)\"\n\n\nfunction CreateTermSet {\n    param (\n        [string]$name\n    )\n    try {       \n        New-PnPTermSet -Name $name -TermGroup \"TAA\"        \n        Write-Host \"$($name) TermSet created. \" -ForegroundColor Magenta\n    }\n    catch [Exception] {\n        Write-Host \"$($name) TermSet creation failed with Exception $($_.Exception.Message).\" -ForegroundColor Red\n    }\n}\n\n\n# +---------------------------------------------------------------------------+\n# | Getting csv data                                                  |\n# +---------------------------------------------------------------------------+\n\n$csvData = Import-Csv -Path $path\n\n$groupName = $csvData | Select-Object -ExpandProperty \"GroupName\" | Where-Object {($_ -ne \"\")} \n$groupCode = $csvData  | Select-Object -ExpandProperty \"Groupcode\" | Where-Object {($_ -ne \"\")} \n$groupCategoryID = $csvData | Select-Object -ExpandProperty \"GroupCategoryID\" | Where-Object {($_ -ne \"\")}\n\n$termsHashTable = @{}\n$termsHashTable.\"GroupName\" = @($groupName) #adds an array\n$termsHashTable.\"Groupcode\" = @($groupCode) #adds an array\n$termsHashTable.\"GroupCategoryID\" = @($groupCategoryID) #adds an array\n\nforeach ($key in $termsHashTable.Keys) {\n\n    \n    Write-host \"Creating $($key) terms......\" -ForegroundColor Cyan\n\n    $values = $termsHashTable[$key]   \n\n    foreach ($item in $values) {\n\n        try {       \n            New-PnPTerm -TermSet $key -TermGroup \"TAA\" -Name $item -LCID \"1033\"\n            Write-host $item \" term created\"  -ForegroundColor Green\n        }       \n        catch [Exception] {\n            Write-host $item \" failed with exception message \" $_.Exception.Message    -ForegroundColor Red       \n        }\n    }\n}\n\n\n```\n\n## Import Terms to Term Set from CSV using CSOM PowerShell\n\n``` PowerShell\n#Load SharePoint CSOM Assemblies\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Runtime.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Taxonomy.dll\"\n   \n#Variables for Processing\n$AdminURL = \"https://spcode-admin.sharepoint.com/\"\n$TermGroupName= \"TAA\"\n$TermSetName=\"GroupName\"\n$CSVFile =\"C:\\Temp\\ImportTerms.csv\"\n$TermHeaderInCSV =\"GroupName\"\n \nTry {\n    #Get Credentials to connect\n    $Cred = Get-Credential\n    $Credentials = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($Cred.Username, $Cred.Password)\n \n    #Setup the context\n    $Ctx = New-Object Microsoft.SharePoint.Client.ClientContext($AdminURL)\n    $Ctx.Credentials = $Credentials\n \n    #Get the term store\n    $TaxonomySession=[Microsoft.SharePoint.Client.Taxonomy.TaxonomySession]::GetTaxonomySession($Ctx)\n    $TaxonomySession.UpdateCache()\n    $TermStore =$TaxonomySession.GetDefaultSiteCollectionTermStore()\n    $Ctx.Load($TaxonomySession)\n    $Ctx.Load($TermStore)\n    $Ctx.ExecuteQuery()\n \n    #Get Termstore data from CSV and iterate through each row\n    Import-Csv $CSVFile | ForEach-Object {\n       \n        #Get the Term Group\n        $TermGroup=$TermStore.Groups.GetByName($TermGroupName)\n \n        #Get the term set\n        $TermSet = $TermGroup.TermSets.GetByName($TermSetName)\n \n        #CSV File Header Row in Term to Add\n        $TermName = $_.$($TermHeaderInCSV)\n  \n        #Check if the given term exists already\n        $Terms = $TermSet.Terms\n        $Ctx.Load($Terms)\n        $Ctx.ExecuteQuery()\n        $Term = $Terms | Where-Object {$_.Name -eq $TermName}\n     \n        If(-not $Term)\n        {\n            #Create Term Set\n            Write-host \"Creating Term '$TermName'\" -ForegroundColor Cyan\n            $Term = $TermSet.CreateTerm($TermName,1033,[System.Guid]::NewGuid().toString())\n            $Ctx.Load($Term)\n            $Ctx.ExecuteQuery()\n            $Term.TermStore.CommitAll()\n            $TaxonomySession.UpdateCache()\n            Write-host \"New Term '$TermName' Added Successfully!\" -ForegroundColor Green\n        }\n        else\n        {\n            Write-host \"Term '$TermName' Exists Already!\" -ForegroundColor Yellow\n        }\n    }\n }\nCatch {\n    write-host -f Red \"Error Importing Term store Data!\" $_.Exception.Message\n}\n\n\n```\n\n\n","source":"_posts/Import-Terms-From-CSV.md","raw":"---\ntitle: SharePoint Online:Import Terms From CSV\ndate: 2018-08-27 18:21:56\ntags: [Sharepoint TermStore, PnP PowerShell]\ndescription: SharePoint Online:Import Terms From CSV file\ncategory: [PowerShell]\nfeatured_image: post-featured.png\n---\n## Import Terms to Term Set from CSV using PnP PowerShell.\n\n<strong>Requirement:</strong> Import terms to term set in SharePoint Online from a CSV file using PowerShell.\n\nHere is my sample csv file. [Click here](groups.csv) to download.\n\n{% asset_img samplecsv.png %}\n\n\n\n\n<strong>Assumptions:</strong> Make sure TermSets are present in the term store. Probably i could also add code to check if term already exist etc. But for now i am keeping it simple.\n\n\n\n``` PowerShell\n\n\n# +---------------------------------------------------------------------------+\n# | User defined variables                                                    |\n# +---------------------------------------------------------------------------+\n\n$tenant = \"SPCode\"\n$siteUrl = \"https://spcode.sharepoint.com/\"\n$path = \"C:\\temp\\groups.csv\"\n\n# +---------------------------------------------------------------------------+\n# | Connect to SharePoint                                                  |\n# +---------------------------------------------------------------------------+\n\n#$creds = Get-Credential\n\n\nWrite-Output $(\"Connecting to {0}\" -f $tenant);\nConnect-PnPOnline -Url $siteUrl\n\nwrite-host \"connected with $($siteUrl)\"\n\n\nfunction CreateTermSet {\n    param (\n        [string]$name\n    )\n    try {       \n        New-PnPTermSet -Name $name -TermGroup \"TAA\"        \n        Write-Host \"$($name) TermSet created. \" -ForegroundColor Magenta\n    }\n    catch [Exception] {\n        Write-Host \"$($name) TermSet creation failed with Exception $($_.Exception.Message).\" -ForegroundColor Red\n    }\n}\n\n\n# +---------------------------------------------------------------------------+\n# | Getting csv data                                                  |\n# +---------------------------------------------------------------------------+\n\n$csvData = Import-Csv -Path $path\n\n$groupName = $csvData | Select-Object -ExpandProperty \"GroupName\" | Where-Object {($_ -ne \"\")} \n$groupCode = $csvData  | Select-Object -ExpandProperty \"Groupcode\" | Where-Object {($_ -ne \"\")} \n$groupCategoryID = $csvData | Select-Object -ExpandProperty \"GroupCategoryID\" | Where-Object {($_ -ne \"\")}\n\n$termsHashTable = @{}\n$termsHashTable.\"GroupName\" = @($groupName) #adds an array\n$termsHashTable.\"Groupcode\" = @($groupCode) #adds an array\n$termsHashTable.\"GroupCategoryID\" = @($groupCategoryID) #adds an array\n\nforeach ($key in $termsHashTable.Keys) {\n\n    \n    Write-host \"Creating $($key) terms......\" -ForegroundColor Cyan\n\n    $values = $termsHashTable[$key]   \n\n    foreach ($item in $values) {\n\n        try {       \n            New-PnPTerm -TermSet $key -TermGroup \"TAA\" -Name $item -LCID \"1033\"\n            Write-host $item \" term created\"  -ForegroundColor Green\n        }       \n        catch [Exception] {\n            Write-host $item \" failed with exception message \" $_.Exception.Message    -ForegroundColor Red       \n        }\n    }\n}\n\n\n```\n\n## Import Terms to Term Set from CSV using CSOM PowerShell\n\n``` PowerShell\n#Load SharePoint CSOM Assemblies\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Runtime.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Taxonomy.dll\"\n   \n#Variables for Processing\n$AdminURL = \"https://spcode-admin.sharepoint.com/\"\n$TermGroupName= \"TAA\"\n$TermSetName=\"GroupName\"\n$CSVFile =\"C:\\Temp\\ImportTerms.csv\"\n$TermHeaderInCSV =\"GroupName\"\n \nTry {\n    #Get Credentials to connect\n    $Cred = Get-Credential\n    $Credentials = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($Cred.Username, $Cred.Password)\n \n    #Setup the context\n    $Ctx = New-Object Microsoft.SharePoint.Client.ClientContext($AdminURL)\n    $Ctx.Credentials = $Credentials\n \n    #Get the term store\n    $TaxonomySession=[Microsoft.SharePoint.Client.Taxonomy.TaxonomySession]::GetTaxonomySession($Ctx)\n    $TaxonomySession.UpdateCache()\n    $TermStore =$TaxonomySession.GetDefaultSiteCollectionTermStore()\n    $Ctx.Load($TaxonomySession)\n    $Ctx.Load($TermStore)\n    $Ctx.ExecuteQuery()\n \n    #Get Termstore data from CSV and iterate through each row\n    Import-Csv $CSVFile | ForEach-Object {\n       \n        #Get the Term Group\n        $TermGroup=$TermStore.Groups.GetByName($TermGroupName)\n \n        #Get the term set\n        $TermSet = $TermGroup.TermSets.GetByName($TermSetName)\n \n        #CSV File Header Row in Term to Add\n        $TermName = $_.$($TermHeaderInCSV)\n  \n        #Check if the given term exists already\n        $Terms = $TermSet.Terms\n        $Ctx.Load($Terms)\n        $Ctx.ExecuteQuery()\n        $Term = $Terms | Where-Object {$_.Name -eq $TermName}\n     \n        If(-not $Term)\n        {\n            #Create Term Set\n            Write-host \"Creating Term '$TermName'\" -ForegroundColor Cyan\n            $Term = $TermSet.CreateTerm($TermName,1033,[System.Guid]::NewGuid().toString())\n            $Ctx.Load($Term)\n            $Ctx.ExecuteQuery()\n            $Term.TermStore.CommitAll()\n            $TaxonomySession.UpdateCache()\n            Write-host \"New Term '$TermName' Added Successfully!\" -ForegroundColor Green\n        }\n        else\n        {\n            Write-host \"Term '$TermName' Exists Already!\" -ForegroundColor Yellow\n        }\n    }\n }\nCatch {\n    write-host -f Red \"Error Importing Term store Data!\" $_.Exception.Message\n}\n\n\n```\n\n\n","slug":"Import-Terms-From-CSV","published":1,"updated":"2018-12-21T11:17:07.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3di10000kwetk3i3wbsk","content":"<h2 id=\"Import-Terms-to-Term-Set-from-CSV-using-PnP-PowerShell\"><a href=\"#Import-Terms-to-Term-Set-from-CSV-using-PnP-PowerShell\" class=\"headerlink\" title=\"Import Terms to Term Set from CSV using PnP PowerShell.\"></a>Import Terms to Term Set from CSV using PnP PowerShell.</h2><p><strong>Requirement:</strong> Import terms to term set in SharePoint Online from a CSV file using PowerShell.</p>\n<p>Here is my sample csv file. <a href=\"groups.csv\">Click here</a> to download.</p>\n<img src=\"/2018/08/27/Import-Terms-From-CSV/samplecsv.png\">\n<p><strong>Assumptions:</strong> Make sure TermSets are present in the term store. Probably i could also add code to check if term already exist etc. But for now i am keeping it simple.</p>\n<pre class=\"line-numbers language-PowerShell\"><code class=\"language-PowerShell\">\n\n# +---------------------------------------------------------------------------+\n# | User defined variables                                                    |\n# +---------------------------------------------------------------------------+\n\n$tenant = \"SPCode\"\n$siteUrl = \"https://spcode.sharepoint.com/\"\n$path = \"C:\\temp\\groups.csv\"\n\n# +---------------------------------------------------------------------------+\n# | Connect to SharePoint                                                  |\n# +---------------------------------------------------------------------------+\n\n#$creds = Get-Credential\n\n\nWrite-Output $(\"Connecting to {0}\" -f $tenant);\nConnect-PnPOnline -Url $siteUrl\n\nwrite-host \"connected with $($siteUrl)\"\n\n\nfunction CreateTermSet {\n    param (\n        [string]$name\n    )\n    try {       \n        New-PnPTermSet -Name $name -TermGroup \"TAA\"        \n        Write-Host \"$($name) TermSet created. \" -ForegroundColor Magenta\n    }\n    catch [Exception] {\n        Write-Host \"$($name) TermSet creation failed with Exception $($_.Exception.Message).\" -ForegroundColor Red\n    }\n}\n\n\n# +---------------------------------------------------------------------------+\n# | Getting csv data                                                  |\n# +---------------------------------------------------------------------------+\n\n$csvData = Import-Csv -Path $path\n\n$groupName = $csvData | Select-Object -ExpandProperty \"GroupName\" | Where-Object {($_ -ne \"\")} \n$groupCode = $csvData  | Select-Object -ExpandProperty \"Groupcode\" | Where-Object {($_ -ne \"\")} \n$groupCategoryID = $csvData | Select-Object -ExpandProperty \"GroupCategoryID\" | Where-Object {($_ -ne \"\")}\n\n$termsHashTable = @{}\n$termsHashTable.\"GroupName\" = @($groupName) #adds an array\n$termsHashTable.\"Groupcode\" = @($groupCode) #adds an array\n$termsHashTable.\"GroupCategoryID\" = @($groupCategoryID) #adds an array\n\nforeach ($key in $termsHashTable.Keys) {\n\n\n    Write-host \"Creating $($key) terms......\" -ForegroundColor Cyan\n\n    $values = $termsHashTable[$key]   \n\n    foreach ($item in $values) {\n\n        try {       \n            New-PnPTerm -TermSet $key -TermGroup \"TAA\" -Name $item -LCID \"1033\"\n            Write-host $item \" term created\"  -ForegroundColor Green\n        }       \n        catch [Exception] {\n            Write-host $item \" failed with exception message \" $_.Exception.Message    -ForegroundColor Red       \n        }\n    }\n}\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Import-Terms-to-Term-Set-from-CSV-using-CSOM-PowerShell\"><a href=\"#Import-Terms-to-Term-Set-from-CSV-using-CSOM-PowerShell\" class=\"headerlink\" title=\"Import Terms to Term Set from CSV using CSOM PowerShell\"></a>Import Terms to Term Set from CSV using CSOM PowerShell</h2><pre class=\"line-numbers language-PowerShell\"><code class=\"language-PowerShell\">#Load SharePoint CSOM Assemblies\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Runtime.dll\"\nAdd-Type -Path \"C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Taxonomy.dll\"\n\n#Variables for Processing\n$AdminURL = \"https://spcode-admin.sharepoint.com/\"\n$TermGroupName= \"TAA\"\n$TermSetName=\"GroupName\"\n$CSVFile =\"C:\\Temp\\ImportTerms.csv\"\n$TermHeaderInCSV =\"GroupName\"\n\nTry {\n    #Get Credentials to connect\n    $Cred = Get-Credential\n    $Credentials = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($Cred.Username, $Cred.Password)\n\n    #Setup the context\n    $Ctx = New-Object Microsoft.SharePoint.Client.ClientContext($AdminURL)\n    $Ctx.Credentials = $Credentials\n\n    #Get the term store\n    $TaxonomySession=[Microsoft.SharePoint.Client.Taxonomy.TaxonomySession]::GetTaxonomySession($Ctx)\n    $TaxonomySession.UpdateCache()\n    $TermStore =$TaxonomySession.GetDefaultSiteCollectionTermStore()\n    $Ctx.Load($TaxonomySession)\n    $Ctx.Load($TermStore)\n    $Ctx.ExecuteQuery()\n\n    #Get Termstore data from CSV and iterate through each row\n    Import-Csv $CSVFile | ForEach-Object {\n\n        #Get the Term Group\n        $TermGroup=$TermStore.Groups.GetByName($TermGroupName)\n\n        #Get the term set\n        $TermSet = $TermGroup.TermSets.GetByName($TermSetName)\n\n        #CSV File Header Row in Term to Add\n        $TermName = $_.$($TermHeaderInCSV)\n\n        #Check if the given term exists already\n        $Terms = $TermSet.Terms\n        $Ctx.Load($Terms)\n        $Ctx.ExecuteQuery()\n        $Term = $Terms | Where-Object {$_.Name -eq $TermName}\n\n        If(-not $Term)\n        {\n            #Create Term Set\n            Write-host \"Creating Term '$TermName'\" -ForegroundColor Cyan\n            $Term = $TermSet.CreateTerm($TermName,1033,[System.Guid]::NewGuid().toString())\n            $Ctx.Load($Term)\n            $Ctx.ExecuteQuery()\n            $Term.TermStore.CommitAll()\n            $TaxonomySession.UpdateCache()\n            Write-host \"New Term '$TermName' Added Successfully!\" -ForegroundColor Green\n        }\n        else\n        {\n            Write-host \"Term '$TermName' Exists Already!\" -ForegroundColor Yellow\n        }\n    }\n }\nCatch {\n    write-host -f Red \"Error Importing Term store Data!\" $_.Exception.Message\n}\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Import-Terms-to-Term-Set-from-CSV-using-PnP-PowerShell\"><a href=\"#Import-Terms-to-Term-Set-from-CSV-using-PnP-PowerShell\" class=\"headerlink\" title=\"Import Terms to Term Set from CSV using PnP PowerShell.\"></a>Import Terms to Term Set from CSV using PnP PowerShell.</h2><p><strong>Requirement:</strong> Import terms to term set in SharePoint Online from a CSV file using PowerShell.</p>\n<p>Here is my sample csv file. <a href=\"groups.csv\">Click here</a> to download.</p>\n<img src=\"/2018/08/27/Import-Terms-From-CSV/samplecsv.png\">\n<p><strong>Assumptions:</strong> Make sure TermSets are present in the term store. Probably i could also add code to check if term already exist etc. But for now i am keeping it simple.</p>\n<pre><code class=\"PowerShell\">\n\n# +---------------------------------------------------------------------------+\n# | User defined variables                                                    |\n# +---------------------------------------------------------------------------+\n\n$tenant = &quot;SPCode&quot;\n$siteUrl = &quot;https://spcode.sharepoint.com/&quot;\n$path = &quot;C:\\temp\\groups.csv&quot;\n\n# +---------------------------------------------------------------------------+\n# | Connect to SharePoint                                                  |\n# +---------------------------------------------------------------------------+\n\n#$creds = Get-Credential\n\n\nWrite-Output $(&quot;Connecting to {0}&quot; -f $tenant);\nConnect-PnPOnline -Url $siteUrl\n\nwrite-host &quot;connected with $($siteUrl)&quot;\n\n\nfunction CreateTermSet {\n    param (\n        [string]$name\n    )\n    try {       \n        New-PnPTermSet -Name $name -TermGroup &quot;TAA&quot;        \n        Write-Host &quot;$($name) TermSet created. &quot; -ForegroundColor Magenta\n    }\n    catch [Exception] {\n        Write-Host &quot;$($name) TermSet creation failed with Exception $($_.Exception.Message).&quot; -ForegroundColor Red\n    }\n}\n\n\n# +---------------------------------------------------------------------------+\n# | Getting csv data                                                  |\n# +---------------------------------------------------------------------------+\n\n$csvData = Import-Csv -Path $path\n\n$groupName = $csvData | Select-Object -ExpandProperty &quot;GroupName&quot; | Where-Object {($_ -ne &quot;&quot;)} \n$groupCode = $csvData  | Select-Object -ExpandProperty &quot;Groupcode&quot; | Where-Object {($_ -ne &quot;&quot;)} \n$groupCategoryID = $csvData | Select-Object -ExpandProperty &quot;GroupCategoryID&quot; | Where-Object {($_ -ne &quot;&quot;)}\n\n$termsHashTable = @{}\n$termsHashTable.&quot;GroupName&quot; = @($groupName) #adds an array\n$termsHashTable.&quot;Groupcode&quot; = @($groupCode) #adds an array\n$termsHashTable.&quot;GroupCategoryID&quot; = @($groupCategoryID) #adds an array\n\nforeach ($key in $termsHashTable.Keys) {\n\n\n    Write-host &quot;Creating $($key) terms......&quot; -ForegroundColor Cyan\n\n    $values = $termsHashTable[$key]   \n\n    foreach ($item in $values) {\n\n        try {       \n            New-PnPTerm -TermSet $key -TermGroup &quot;TAA&quot; -Name $item -LCID &quot;1033&quot;\n            Write-host $item &quot; term created&quot;  -ForegroundColor Green\n        }       \n        catch [Exception] {\n            Write-host $item &quot; failed with exception message &quot; $_.Exception.Message    -ForegroundColor Red       \n        }\n    }\n}\n\n\n</code></pre>\n<h2 id=\"Import-Terms-to-Term-Set-from-CSV-using-CSOM-PowerShell\"><a href=\"#Import-Terms-to-Term-Set-from-CSV-using-CSOM-PowerShell\" class=\"headerlink\" title=\"Import Terms to Term Set from CSV using CSOM PowerShell\"></a>Import Terms to Term Set from CSV using CSOM PowerShell</h2><pre><code class=\"PowerShell\">#Load SharePoint CSOM Assemblies\nAdd-Type -Path &quot;C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.dll&quot;\nAdd-Type -Path &quot;C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Runtime.dll&quot;\nAdd-Type -Path &quot;C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\ISAPI\\Microsoft.SharePoint.Client.Taxonomy.dll&quot;\n\n#Variables for Processing\n$AdminURL = &quot;https://spcode-admin.sharepoint.com/&quot;\n$TermGroupName= &quot;TAA&quot;\n$TermSetName=&quot;GroupName&quot;\n$CSVFile =&quot;C:\\Temp\\ImportTerms.csv&quot;\n$TermHeaderInCSV =&quot;GroupName&quot;\n\nTry {\n    #Get Credentials to connect\n    $Cred = Get-Credential\n    $Credentials = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($Cred.Username, $Cred.Password)\n\n    #Setup the context\n    $Ctx = New-Object Microsoft.SharePoint.Client.ClientContext($AdminURL)\n    $Ctx.Credentials = $Credentials\n\n    #Get the term store\n    $TaxonomySession=[Microsoft.SharePoint.Client.Taxonomy.TaxonomySession]::GetTaxonomySession($Ctx)\n    $TaxonomySession.UpdateCache()\n    $TermStore =$TaxonomySession.GetDefaultSiteCollectionTermStore()\n    $Ctx.Load($TaxonomySession)\n    $Ctx.Load($TermStore)\n    $Ctx.ExecuteQuery()\n\n    #Get Termstore data from CSV and iterate through each row\n    Import-Csv $CSVFile | ForEach-Object {\n\n        #Get the Term Group\n        $TermGroup=$TermStore.Groups.GetByName($TermGroupName)\n\n        #Get the term set\n        $TermSet = $TermGroup.TermSets.GetByName($TermSetName)\n\n        #CSV File Header Row in Term to Add\n        $TermName = $_.$($TermHeaderInCSV)\n\n        #Check if the given term exists already\n        $Terms = $TermSet.Terms\n        $Ctx.Load($Terms)\n        $Ctx.ExecuteQuery()\n        $Term = $Terms | Where-Object {$_.Name -eq $TermName}\n\n        If(-not $Term)\n        {\n            #Create Term Set\n            Write-host &quot;Creating Term &#39;$TermName&#39;&quot; -ForegroundColor Cyan\n            $Term = $TermSet.CreateTerm($TermName,1033,[System.Guid]::NewGuid().toString())\n            $Ctx.Load($Term)\n            $Ctx.ExecuteQuery()\n            $Term.TermStore.CommitAll()\n            $TaxonomySession.UpdateCache()\n            Write-host &quot;New Term &#39;$TermName&#39; Added Successfully!&quot; -ForegroundColor Green\n        }\n        else\n        {\n            Write-host &quot;Term &#39;$TermName&#39; Exists Already!&quot; -ForegroundColor Yellow\n        }\n    }\n }\nCatch {\n    write-host -f Red &quot;Error Importing Term store Data!&quot; $_.Exception.Message\n}\n\n\n</code></pre>\n"},{"title":"Sign In As Different User In SharePoint 2013/2016","date":"2018-08-16T14:04:16.000Z","description":"Sign In As Different User In SharePoint On-prem in 2013 and 2016","featured_image":"https://www.ejazhussain.com/2018/08/16/Sign-In-As-Different-User-In-SharePoint-2013-2016/post-featured.png","_content":"\n## Sign In As Different User Option\n\nI recently had to sign in as a test user on a SharePoint 2013 development environment, but I wasn’t able to locate the Sign In As Different User link that had been present in SharePoint 2010.\n\nIt’s no longer available in **SharePoint 2013/2016**.\n\nThis is a great option to have, especially for developers who need to test apps under different privileges.\n\nBut there’s still a way to sign in as a different user in SharePoint 2013/2016. Just go to the following URL:\n\n``` \n👉 http://yourservername/_layouts/closeConnection.aspx?loginasanotheruser=true\n```\n\n(It may not work with IE 10 & Safari browsers.)\n\nAnother way of signing in as a different user is to run the browser under a different user account, but using the link above simple for quick access.\n\nAnd there you go.\n\n","source":"_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016.md","raw":"---\ntitle: Sign In As Different User In SharePoint 2013/2016\ndate: 2018-08-16 15:04:16\ntags: [SharePoint administration, SharePoint 2013, SharePoint 2016]\ndescription: Sign In As Different User In SharePoint On-prem in 2013 and 2016\ncategories: \nfeatured_image: post-featured.png  \n---\n\n## Sign In As Different User Option\n\nI recently had to sign in as a test user on a SharePoint 2013 development environment, but I wasn’t able to locate the Sign In As Different User link that had been present in SharePoint 2010.\n\nIt’s no longer available in **SharePoint 2013/2016**.\n\nThis is a great option to have, especially for developers who need to test apps under different privileges.\n\nBut there’s still a way to sign in as a different user in SharePoint 2013/2016. Just go to the following URL:\n\n``` \n👉 http://yourservername/_layouts/closeConnection.aspx?loginasanotheruser=true\n```\n\n(It may not work with IE 10 & Safari browsers.)\n\nAnother way of signing in as a different user is to run the browser under a different user account, but using the link above simple for quick access.\n\nAnd there you go.\n\n","slug":"Sign-In-As-Different-User-In-SharePoint-2013-2016","published":1,"updated":"2018-12-21T11:18:09.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3di10001kwetv7eg9uop","content":"<h2 id=\"Sign-In-As-Different-User-Option\"><a href=\"#Sign-In-As-Different-User-Option\" class=\"headerlink\" title=\"Sign In As Different User Option\"></a>Sign In As Different User Option</h2><p>I recently had to sign in as a test user on a SharePoint 2013 development environment, but I wasn’t able to locate the Sign In As Different User link that had been present in SharePoint 2010.</p>\n<p>It’s no longer available in <strong>SharePoint 2013/2016</strong>.</p>\n<p>This is a great option to have, especially for developers who need to test apps under different privileges.</p>\n<p>But there’s still a way to sign in as a different user in SharePoint 2013/2016. Just go to the following URL:</p>\n<pre><code>👉 http://yourservername/_layouts/closeConnection.aspx?loginasanotheruser=true\n</code></pre><p>(It may not work with IE 10 &amp; Safari browsers.)</p>\n<p>Another way of signing in as a different user is to run the browser under a different user account, but using the link above simple for quick access.</p>\n<p>And there you go.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Sign-In-As-Different-User-Option\"><a href=\"#Sign-In-As-Different-User-Option\" class=\"headerlink\" title=\"Sign In As Different User Option\"></a>Sign In As Different User Option</h2><p>I recently had to sign in as a test user on a SharePoint 2013 development environment, but I wasn’t able to locate the Sign In As Different User link that had been present in SharePoint 2010.</p>\n<p>It’s no longer available in <strong>SharePoint 2013/2016</strong>.</p>\n<p>This is a great option to have, especially for developers who need to test apps under different privileges.</p>\n<p>But there’s still a way to sign in as a different user in SharePoint 2013/2016. Just go to the following URL:</p>\n<pre><code>👉 http://yourservername/_layouts/closeConnection.aspx?loginasanotheruser=true\n</code></pre><p>(It may not work with IE 10 &amp; Safari browsers.)</p>\n<p>Another way of signing in as a different user is to run the browser under a different user account, but using the link above simple for quick access.</p>\n<p>And there you go.</p>\n"},{"title":"SharePoint Online Integration with Azure App Insights","date":"2018-09-09T15:12:00.000Z","description":"SharePoint Online Integration with Azure App Insights","category":null,"featured_image":"https://www.ejazhussain.com/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/post-featured.png","_content":"\n## SharePoint Online Integration with Azure App Insights\n\nRecently I had a chance to work on one of the project to monitor custom events from SharePoint Online pages.\n\nKeeping in mind above scenario, there are two platform comes in my mind\n\n* Azure App Insights\n* Google Analytics\n\nI really liked Azure App Insights. Azure Application Insight is more than just custom dimensions, metrics and page views. It is an extensible Application Performance Management (APM) service.\n\n## Application Insights monitors\n\nhere are few of the examples of different type of data being analyzed by Azure App Insight\n\n1. Request rates, response times, and failure rates\n2. Dependency rates, response times, and failure rates\n3. Exceptions\n4. Load Performance \n\nfor complete list, visit [What is Application Insights?](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview)\n\n## Solution\n\nHere are the steps to track custom events in the page. One of the scenario for custom events could be to track event every time user click on the external link. \n\n1. Create Azure Application Insight\n{% asset_img create-new-azure-app-insight.png %}\n2. Once the azure app insight is created. keep note of your Instrumentation Key.\n3. JavaScript code snippet to track custom event from SharePoint Page\n\n``` JavaScript\n\n$(function () {\n    RemoteInject();\n});\nfunction RemoteInject() {\n\n    var appInsights = window.appInsights || function (a) {\n        function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement(\"script\"); b.src = a.url || \"https://az416426.vo.msecnd.net/scripts/a/ai.0.js\", d.getElementsByTagName(\"script\")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = [\"Event\", \"Exception\", \"Metric\", \"PageView\", \"Trace\", \"Dependency\"]; f.length;)b(\"track\" + f.pop()); if (b(\"setAuthenticatedUserContext\"), b(\"clearAuthenticatedUserContext\"), b(\"startTrackEvent\"), b(\"stopTrackEvent\"), b(\"startTrackPage\"), b(\"stopTrackPage\"), b(\"flush\"), !a.disableExceptionTracking) { f = \"onerror\", b(\"_\" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c[\"_\" + f](a, b, d, e, h), i } } return c\n    }({\n        instrumentationKey: \"\"\n    });\n    window.appInsights = appInsights;\n    appInsights.trackPageView(\"CodeHub Monitoring\");\n\n    $('a').click(function () {\n\n        var link = this.hostname;\n        if ($('a').isExternal(link)) {           \n            window.appInsights.trackEvent('External link clicked with URL',\n                {\n                    Url: $(this).attr('href')\n                },\n                {});\n        }\n        else { \n        }\n\n    });\n\n};\n\n$.fn.isExternal = function (link) {\n    var host = window.location.host;\n    return (link !== host);\n};\n\n```\n\n4. The next step is to inject this piece of JavaScript in every page in your Office 365 portal. There are plenty of ways to do this. I am going to create a custom action.\n\n5. Create few external and internal links on SharePoint Page. As soon you will click on external link, External link information will be tracked. Sometimes you have to wait for couple of minutes before your event data start appearing in the Azure App Insight.\n\n6. Here is screenshot where external link event information appears\n{% asset_img customevents.png %}\n\nHere are some of Azure Application Insights API Methods. For more information visit [Application Insights API Methods](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics)\n\n1. TrackPageView    \n2. TrackEvent   \n3. TrackMetric  \n4. TrackException   \n5. TrackRequest \n6. TrackTrace   \n7. TrackDependency\n\nI hope this helps and gives a starting point to implement complex scenarios.\n\n\n\n\n\n\n","source":"_posts/SharePoint-Online-Integration-with-Azure-App-Insights.md","raw":"---\ntitle: SharePoint Online Integration with Azure App Insights\ndate: 2018-09-09 16:12:00\ntags: [Azure Application Insight, Azure, Analytics, SharePoint Online]\ndescription: SharePoint Online Integration with Azure App Insights\ncategory:\nfeatured_image: post-featured.png  \n---\n\n## SharePoint Online Integration with Azure App Insights\n\nRecently I had a chance to work on one of the project to monitor custom events from SharePoint Online pages.\n\nKeeping in mind above scenario, there are two platform comes in my mind\n\n* Azure App Insights\n* Google Analytics\n\nI really liked Azure App Insights. Azure Application Insight is more than just custom dimensions, metrics and page views. It is an extensible Application Performance Management (APM) service.\n\n## Application Insights monitors\n\nhere are few of the examples of different type of data being analyzed by Azure App Insight\n\n1. Request rates, response times, and failure rates\n2. Dependency rates, response times, and failure rates\n3. Exceptions\n4. Load Performance \n\nfor complete list, visit [What is Application Insights?](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview)\n\n## Solution\n\nHere are the steps to track custom events in the page. One of the scenario for custom events could be to track event every time user click on the external link. \n\n1. Create Azure Application Insight\n{% asset_img create-new-azure-app-insight.png %}\n2. Once the azure app insight is created. keep note of your Instrumentation Key.\n3. JavaScript code snippet to track custom event from SharePoint Page\n\n``` JavaScript\n\n$(function () {\n    RemoteInject();\n});\nfunction RemoteInject() {\n\n    var appInsights = window.appInsights || function (a) {\n        function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement(\"script\"); b.src = a.url || \"https://az416426.vo.msecnd.net/scripts/a/ai.0.js\", d.getElementsByTagName(\"script\")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = [\"Event\", \"Exception\", \"Metric\", \"PageView\", \"Trace\", \"Dependency\"]; f.length;)b(\"track\" + f.pop()); if (b(\"setAuthenticatedUserContext\"), b(\"clearAuthenticatedUserContext\"), b(\"startTrackEvent\"), b(\"stopTrackEvent\"), b(\"startTrackPage\"), b(\"stopTrackPage\"), b(\"flush\"), !a.disableExceptionTracking) { f = \"onerror\", b(\"_\" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c[\"_\" + f](a, b, d, e, h), i } } return c\n    }({\n        instrumentationKey: \"\"\n    });\n    window.appInsights = appInsights;\n    appInsights.trackPageView(\"CodeHub Monitoring\");\n\n    $('a').click(function () {\n\n        var link = this.hostname;\n        if ($('a').isExternal(link)) {           \n            window.appInsights.trackEvent('External link clicked with URL',\n                {\n                    Url: $(this).attr('href')\n                },\n                {});\n        }\n        else { \n        }\n\n    });\n\n};\n\n$.fn.isExternal = function (link) {\n    var host = window.location.host;\n    return (link !== host);\n};\n\n```\n\n4. The next step is to inject this piece of JavaScript in every page in your Office 365 portal. There are plenty of ways to do this. I am going to create a custom action.\n\n5. Create few external and internal links on SharePoint Page. As soon you will click on external link, External link information will be tracked. Sometimes you have to wait for couple of minutes before your event data start appearing in the Azure App Insight.\n\n6. Here is screenshot where external link event information appears\n{% asset_img customevents.png %}\n\nHere are some of Azure Application Insights API Methods. For more information visit [Application Insights API Methods](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics)\n\n1. TrackPageView    \n2. TrackEvent   \n3. TrackMetric  \n4. TrackException   \n5. TrackRequest \n6. TrackTrace   \n7. TrackDependency\n\nI hope this helps and gives a starting point to implement complex scenarios.\n\n\n\n\n\n\n","slug":"SharePoint-Online-Integration-with-Azure-App-Insights","published":1,"updated":"2018-12-24T16:08:28.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3di10004kwet1o5hlzr5","content":"<h2 id=\"SharePoint-Online-Integration-with-Azure-App-Insights\"><a href=\"#SharePoint-Online-Integration-with-Azure-App-Insights\" class=\"headerlink\" title=\"SharePoint Online Integration with Azure App Insights\"></a>SharePoint Online Integration with Azure App Insights</h2><p>Recently I had a chance to work on one of the project to monitor custom events from SharePoint Online pages.</p>\n<p>Keeping in mind above scenario, there are two platform comes in my mind</p>\n<ul>\n<li>Azure App Insights</li>\n<li>Google Analytics</li>\n</ul>\n<p>I really liked Azure App Insights. Azure Application Insight is more than just custom dimensions, metrics and page views. It is an extensible Application Performance Management (APM) service.</p>\n<h2 id=\"Application-Insights-monitors\"><a href=\"#Application-Insights-monitors\" class=\"headerlink\" title=\"Application Insights monitors\"></a>Application Insights monitors</h2><p>here are few of the examples of different type of data being analyzed by Azure App Insight</p>\n<ol>\n<li>Request rates, response times, and failure rates</li>\n<li>Dependency rates, response times, and failure rates</li>\n<li>Exceptions</li>\n<li>Load Performance </li>\n</ol>\n<p>for complete list, visit <a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview\" target=\"_blank\" rel=\"noopener\">What is Application Insights?</a></p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>Here are the steps to track custom events in the page. One of the scenario for custom events could be to track event every time user click on the external link. </p>\n<ol>\n<li>Create Azure Application Insight<img src=\"/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/create-new-azure-app-insight.png\"></li>\n<li>Once the azure app insight is created. keep note of your Instrumentation Key.</li>\n<li>JavaScript code snippet to track custom event from SharePoint Page</li>\n</ol>\n<pre class=\"line-numbers language-JavaScript\"><code class=\"language-JavaScript\">\n$(function () {\n    RemoteInject();\n});\nfunction RemoteInject() {\n\n    var appInsights = window.appInsights || function (a) {\n        function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement(\"script\"); b.src = a.url || \"https://az416426.vo.msecnd.net/scripts/a/ai.0.js\", d.getElementsByTagName(\"script\")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = [\"Event\", \"Exception\", \"Metric\", \"PageView\", \"Trace\", \"Dependency\"]; f.length;)b(\"track\" + f.pop()); if (b(\"setAuthenticatedUserContext\"), b(\"clearAuthenticatedUserContext\"), b(\"startTrackEvent\"), b(\"stopTrackEvent\"), b(\"startTrackPage\"), b(\"stopTrackPage\"), b(\"flush\"), !a.disableExceptionTracking) { f = \"onerror\", b(\"_\" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c[\"_\" + f](a, b, d, e, h), i } } return c\n    }({\n        instrumentationKey: \"\"\n    });\n    window.appInsights = appInsights;\n    appInsights.trackPageView(\"CodeHub Monitoring\");\n\n    $('a').click(function () {\n\n        var link = this.hostname;\n        if ($('a').isExternal(link)) {           \n            window.appInsights.trackEvent('External link clicked with URL',\n                {\n                    Url: $(this).attr('href')\n                },\n                {});\n        }\n        else { \n        }\n\n    });\n\n};\n\n$.fn.isExternal = function (link) {\n    var host = window.location.host;\n    return (link !== host);\n};\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li><p>The next step is to inject this piece of JavaScript in every page in your Office 365 portal. There are plenty of ways to do this. I am going to create a custom action.</p>\n</li>\n<li><p>Create few external and internal links on SharePoint Page. As soon you will click on external link, External link information will be tracked. Sometimes you have to wait for couple of minutes before your event data start appearing in the Azure App Insight.</p>\n</li>\n<li><p>Here is screenshot where external link event information appears</p>\n<img src=\"/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/customevents.png\">\n</li>\n</ol>\n<p>Here are some of Azure Application Insights API Methods. For more information visit <a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics\" target=\"_blank\" rel=\"noopener\">Application Insights API Methods</a></p>\n<ol>\n<li>TrackPageView    </li>\n<li>TrackEvent   </li>\n<li>TrackMetric  </li>\n<li>TrackException   </li>\n<li>TrackRequest </li>\n<li>TrackTrace   </li>\n<li>TrackDependency</li>\n</ol>\n<p>I hope this helps and gives a starting point to implement complex scenarios.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SharePoint-Online-Integration-with-Azure-App-Insights\"><a href=\"#SharePoint-Online-Integration-with-Azure-App-Insights\" class=\"headerlink\" title=\"SharePoint Online Integration with Azure App Insights\"></a>SharePoint Online Integration with Azure App Insights</h2><p>Recently I had a chance to work on one of the project to monitor custom events from SharePoint Online pages.</p>\n<p>Keeping in mind above scenario, there are two platform comes in my mind</p>\n<ul>\n<li>Azure App Insights</li>\n<li>Google Analytics</li>\n</ul>\n<p>I really liked Azure App Insights. Azure Application Insight is more than just custom dimensions, metrics and page views. It is an extensible Application Performance Management (APM) service.</p>\n<h2 id=\"Application-Insights-monitors\"><a href=\"#Application-Insights-monitors\" class=\"headerlink\" title=\"Application Insights monitors\"></a>Application Insights monitors</h2><p>here are few of the examples of different type of data being analyzed by Azure App Insight</p>\n<ol>\n<li>Request rates, response times, and failure rates</li>\n<li>Dependency rates, response times, and failure rates</li>\n<li>Exceptions</li>\n<li>Load Performance </li>\n</ol>\n<p>for complete list, visit <a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview\" target=\"_blank\" rel=\"noopener\">What is Application Insights?</a></p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>Here are the steps to track custom events in the page. One of the scenario for custom events could be to track event every time user click on the external link. </p>\n<ol>\n<li>Create Azure Application Insight<img src=\"/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/create-new-azure-app-insight.png\"></li>\n<li>Once the azure app insight is created. keep note of your Instrumentation Key.</li>\n<li>JavaScript code snippet to track custom event from SharePoint Page</li>\n</ol>\n<pre><code class=\"JavaScript\">\n$(function () {\n    RemoteInject();\n});\nfunction RemoteInject() {\n\n    var appInsights = window.appInsights || function (a) {\n        function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement(&quot;script&quot;); b.src = a.url || &quot;https://az416426.vo.msecnd.net/scripts/a/ai.0.js&quot;, d.getElementsByTagName(&quot;script&quot;)[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = [&quot;Event&quot;, &quot;Exception&quot;, &quot;Metric&quot;, &quot;PageView&quot;, &quot;Trace&quot;, &quot;Dependency&quot;]; f.length;)b(&quot;track&quot; + f.pop()); if (b(&quot;setAuthenticatedUserContext&quot;), b(&quot;clearAuthenticatedUserContext&quot;), b(&quot;startTrackEvent&quot;), b(&quot;stopTrackEvent&quot;), b(&quot;startTrackPage&quot;), b(&quot;stopTrackPage&quot;), b(&quot;flush&quot;), !a.disableExceptionTracking) { f = &quot;onerror&quot;, b(&quot;_&quot; + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g &amp;&amp; g(a, b, d, e, h); return !0 !== i &amp;&amp; c[&quot;_&quot; + f](a, b, d, e, h), i } } return c\n    }({\n        instrumentationKey: &quot;&quot;\n    });\n    window.appInsights = appInsights;\n    appInsights.trackPageView(&quot;CodeHub Monitoring&quot;);\n\n    $(&#39;a&#39;).click(function () {\n\n        var link = this.hostname;\n        if ($(&#39;a&#39;).isExternal(link)) {           \n            window.appInsights.trackEvent(&#39;External link clicked with URL&#39;,\n                {\n                    Url: $(this).attr(&#39;href&#39;)\n                },\n                {});\n        }\n        else { \n        }\n\n    });\n\n};\n\n$.fn.isExternal = function (link) {\n    var host = window.location.host;\n    return (link !== host);\n};\n\n</code></pre>\n<ol start=\"4\">\n<li><p>The next step is to inject this piece of JavaScript in every page in your Office 365 portal. There are plenty of ways to do this. I am going to create a custom action.</p>\n</li>\n<li><p>Create few external and internal links on SharePoint Page. As soon you will click on external link, External link information will be tracked. Sometimes you have to wait for couple of minutes before your event data start appearing in the Azure App Insight.</p>\n</li>\n<li><p>Here is screenshot where external link event information appears</p>\n<img src=\"/2018/09/09/SharePoint-Online-Integration-with-Azure-App-Insights/customevents.png\">\n</li>\n</ol>\n<p>Here are some of Azure Application Insights API Methods. For more information visit <a href=\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics\" target=\"_blank\" rel=\"noopener\">Application Insights API Methods</a></p>\n<ol>\n<li>TrackPageView    </li>\n<li>TrackEvent   </li>\n<li>TrackMetric  </li>\n<li>TrackException   </li>\n<li>TrackRequest </li>\n<li>TrackTrace   </li>\n<li>TrackDependency</li>\n</ol>\n<p>I hope this helps and gives a starting point to implement complex scenarios.</p>\n"},{"title":"Azure blob storage operations using Node.js","date":"2018-12-23T14:50:51.000Z","description":"How to perform different Azure blob storage operations using Node.js, Blob containers, Blob metadata, Blob properties","category":null,"featured_image":"https://www.ejazhussain.com/2018/12/23/azure-blob-storage-using-node/post-featured.png","_content":"## Azure blob storage operations using Node.js\n\nThis article will provide how-to-guide to work with Azure Blob storage using Node.js\n\nCurrently Microsoft Azure Storage SDK.v2 is available as stable version. SDK.v10 is still in preview and which has more features compare to SKD.v2. [Go to Storage SDK v10 for JavaScript (In preview)](https://github.com/Azure/azure-storage-js)\nIn SDK.v2 you can find different operations for Blob, Queue , File,Table in callback style. See below.\n\n## Azure Storage SDK.v2 basic features\n\n**Blobs**\n    Create/Delete Containers\n    Create/Read/Update/Delete Blobs\n**Tables**\n    Create/Delete Tables\n    Query/Create/Read/Update/Delete Entities\n**Files**\n    Create/Delete Shares\n    Create/Delete Directories\n**Create/Read/Update/Delete Files**\n    Queues\n    Create/Delete Queues\n**Insert/Peek Queue Messages**\n    Advanced Queue Operations\n    Service Properties\n**Get Service Properties**\n    Set Service Properties\n\n## Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)\n\n\n\n| SDK Name                             \t| Version     \t| Description                                                                   \t| NPM/API Reference Links \t|\n|--------------------------------------\t|-------------\t|-------------------------------------------------------------------------------\t|-------------------------\t|\n| [storage SDK v10 for JavaScript](https://github.com/Azure/azure-storage-js)       \t| v10-Preview \t| The next generation async Storage SDK (Blob only, async and promise support)  \t| [NPM - Reference](https://www.npmjs.com/package/@azure/storage-blob)         \t|\n| [Storage SDK v2 for JavaScript](https://github.com/Azure/azure-storage-node)        \t| v2          \t| Legacy Storage SDK in this repository (Blob/Queue/File/Table, callback style) \t| [NPM - Reference](https://www.npmjs.com/package/azure-storage)         \t|\n| [Azure Management SDKs for JavaScript](https://github.com/Azure/azure-sdk-for-node) \t| v2          \t| Management SDKs including Storage Resource Provider APIs                      \t| [NPM - Reference](https://www.npmjs.com/package/azure)         \t|\n\n\t\t\n\nPlease check details on API reference documents:\n\n[Microsoft official API document on docs.microsoft.com](https://docs.microsoft.com/en-us/javascript/api/azure-storage/?view=azure-node-latest)\n[Generated API references on GitHub pages](http://azure.github.io/azure-storage-node/)\n\n\n**Prerequisites**\n\n1. First of all, you need to install Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers using following npm package.\n```\n👉 npm install azure-storage --save\n```\n2. Make sure you have Azure Storage account created in Azure and copy connection string [Here is a quick guide to create Azure Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account?tabs=azure-portal)\n3. Create a blob container\n4. Install dotenv package to save your Azure Storage Connection String other configurations\n```\n👉 npm install dotenv --save\n```\n\n## Some Code\n<script src=\"https://gist.github.com/ejazhussain/8b7fde5bcbb498bb6b5db4b18059e88a.js\"></script>\n","source":"_posts/azure-blob-storage-using-node.md","raw":"---\ntitle: Azure blob storage operations using Node.js\ndate: 2018-12-23 14:50:51\ndescription: \"How to perform different Azure blob storage operations using Node.js, Blob containers, Blob metadata, Blob properties\"\ntags: [Azure, Azure Blog Storage, Node JS]\ncategory:\nfeatured_image: post-featured.png\n---\n## Azure blob storage operations using Node.js\n\nThis article will provide how-to-guide to work with Azure Blob storage using Node.js\n\nCurrently Microsoft Azure Storage SDK.v2 is available as stable version. SDK.v10 is still in preview and which has more features compare to SKD.v2. [Go to Storage SDK v10 for JavaScript (In preview)](https://github.com/Azure/azure-storage-js)\nIn SDK.v2 you can find different operations for Blob, Queue , File,Table in callback style. See below.\n\n## Azure Storage SDK.v2 basic features\n\n**Blobs**\n    Create/Delete Containers\n    Create/Read/Update/Delete Blobs\n**Tables**\n    Create/Delete Tables\n    Query/Create/Read/Update/Delete Entities\n**Files**\n    Create/Delete Shares\n    Create/Delete Directories\n**Create/Read/Update/Delete Files**\n    Queues\n    Create/Delete Queues\n**Insert/Peek Queue Messages**\n    Advanced Queue Operations\n    Service Properties\n**Get Service Properties**\n    Set Service Properties\n\n## Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)\n\n\n\n| SDK Name                             \t| Version     \t| Description                                                                   \t| NPM/API Reference Links \t|\n|--------------------------------------\t|-------------\t|-------------------------------------------------------------------------------\t|-------------------------\t|\n| [storage SDK v10 for JavaScript](https://github.com/Azure/azure-storage-js)       \t| v10-Preview \t| The next generation async Storage SDK (Blob only, async and promise support)  \t| [NPM - Reference](https://www.npmjs.com/package/@azure/storage-blob)         \t|\n| [Storage SDK v2 for JavaScript](https://github.com/Azure/azure-storage-node)        \t| v2          \t| Legacy Storage SDK in this repository (Blob/Queue/File/Table, callback style) \t| [NPM - Reference](https://www.npmjs.com/package/azure-storage)         \t|\n| [Azure Management SDKs for JavaScript](https://github.com/Azure/azure-sdk-for-node) \t| v2          \t| Management SDKs including Storage Resource Provider APIs                      \t| [NPM - Reference](https://www.npmjs.com/package/azure)         \t|\n\n\t\t\n\nPlease check details on API reference documents:\n\n[Microsoft official API document on docs.microsoft.com](https://docs.microsoft.com/en-us/javascript/api/azure-storage/?view=azure-node-latest)\n[Generated API references on GitHub pages](http://azure.github.io/azure-storage-node/)\n\n\n**Prerequisites**\n\n1. First of all, you need to install Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers using following npm package.\n```\n👉 npm install azure-storage --save\n```\n2. Make sure you have Azure Storage account created in Azure and copy connection string [Here is a quick guide to create Azure Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account?tabs=azure-portal)\n3. Create a blob container\n4. Install dotenv package to save your Azure Storage Connection String other configurations\n```\n👉 npm install dotenv --save\n```\n\n## Some Code\n<script src=\"https://gist.github.com/ejazhussain/8b7fde5bcbb498bb6b5db4b18059e88a.js\"></script>\n","slug":"azure-blob-storage-using-node","published":1,"updated":"2018-12-24T17:35:16.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3dib0005kwetws5ql2bp","content":"<h2 id=\"Azure-blob-storage-operations-using-Node-js\"><a href=\"#Azure-blob-storage-operations-using-Node-js\" class=\"headerlink\" title=\"Azure blob storage operations using Node.js\"></a>Azure blob storage operations using Node.js</h2><p>This article will provide how-to-guide to work with Azure Blob storage using Node.js</p>\n<p>Currently Microsoft Azure Storage SDK.v2 is available as stable version. SDK.v10 is still in preview and which has more features compare to SKD.v2. <a href=\"https://github.com/Azure/azure-storage-js\" target=\"_blank\" rel=\"noopener\">Go to Storage SDK v10 for JavaScript (In preview)</a><br>In SDK.v2 you can find different operations for Blob, Queue , File,Table in callback style. See below.</p>\n<h2 id=\"Azure-Storage-SDK-v2-basic-features\"><a href=\"#Azure-Storage-SDK-v2-basic-features\" class=\"headerlink\" title=\"Azure Storage SDK.v2 basic features\"></a>Azure Storage SDK.v2 basic features</h2><p><strong>Blobs</strong><br>    Create/Delete Containers<br>    Create/Read/Update/Delete Blobs<br><strong>Tables</strong><br>    Create/Delete Tables<br>    Query/Create/Read/Update/Delete Entities<br><strong>Files</strong><br>    Create/Delete Shares<br>    Create/Delete Directories<br><strong>Create/Read/Update/Delete Files</strong><br>    Queues<br>    Create/Delete Queues<br><strong>Insert/Peek Queue Messages</strong><br>    Advanced Queue Operations<br>    Service Properties<br><strong>Get Service Properties</strong><br>    Set Service Properties</p>\n<h2 id=\"Comparison-of-Azure-Storage-SDK-v2-and-SDKv-10-In-preview\"><a href=\"#Comparison-of-Azure-Storage-SDK-v2-and-SDKv-10-In-preview\" class=\"headerlink\" title=\"Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)\"></a>Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)</h2><table>\n<thead>\n<tr>\n<th>SDK Name</th>\n<th>Version</th>\n<th>Description</th>\n<th>NPM/API Reference Links</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-storage-js\" target=\"_blank\" rel=\"noopener\">storage SDK v10 for JavaScript</a></td>\n<td>v10-Preview</td>\n<td>The next generation async Storage SDK (Blob only, async and promise support)</td>\n<td><a href=\"https://www.npmjs.com/package/@azure/storage-blob\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-storage-node\" target=\"_blank\" rel=\"noopener\">Storage SDK v2 for JavaScript</a></td>\n<td>v2</td>\n<td>Legacy Storage SDK in this repository (Blob/Queue/File/Table, callback style)</td>\n<td><a href=\"https://www.npmjs.com/package/azure-storage\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-sdk-for-node\" target=\"_blank\" rel=\"noopener\">Azure Management SDKs for JavaScript</a></td>\n<td>v2</td>\n<td>Management SDKs including Storage Resource Provider APIs</td>\n<td><a href=\"https://www.npmjs.com/package/azure\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n</tbody>\n</table>\n<p>Please check details on API reference documents:</p>\n<p><a href=\"https://docs.microsoft.com/en-us/javascript/api/azure-storage/?view=azure-node-latest\" target=\"_blank\" rel=\"noopener\">Microsoft official API document on docs.microsoft.com</a><br><a href=\"http://azure.github.io/azure-storage-node/\" target=\"_blank\" rel=\"noopener\">Generated API references on GitHub pages</a></p>\n<p><strong>Prerequisites</strong></p>\n<ol>\n<li>First of all, you need to install Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers using following npm package.<pre><code>👉 npm install azure-storage --save\n</code></pre></li>\n<li>Make sure you have Azure Storage account created in Azure and copy connection string <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account?tabs=azure-portal\" target=\"_blank\" rel=\"noopener\">Here is a quick guide to create Azure Storage Account</a></li>\n<li>Create a blob container</li>\n<li>Install dotenv package to save your Azure Storage Connection String other configurations<pre><code>👉 npm install dotenv --save\n</code></pre></li>\n</ol>\n<h2 id=\"Some-Code\"><a href=\"#Some-Code\" class=\"headerlink\" title=\"Some Code\"></a>Some Code</h2><script src=\"https://gist.github.com/ejazhussain/8b7fde5bcbb498bb6b5db4b18059e88a.js\"></script>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Azure-blob-storage-operations-using-Node-js\"><a href=\"#Azure-blob-storage-operations-using-Node-js\" class=\"headerlink\" title=\"Azure blob storage operations using Node.js\"></a>Azure blob storage operations using Node.js</h2><p>This article will provide how-to-guide to work with Azure Blob storage using Node.js</p>\n<p>Currently Microsoft Azure Storage SDK.v2 is available as stable version. SDK.v10 is still in preview and which has more features compare to SKD.v2. <a href=\"https://github.com/Azure/azure-storage-js\" target=\"_blank\" rel=\"noopener\">Go to Storage SDK v10 for JavaScript (In preview)</a><br>In SDK.v2 you can find different operations for Blob, Queue , File,Table in callback style. See below.</p>\n<h2 id=\"Azure-Storage-SDK-v2-basic-features\"><a href=\"#Azure-Storage-SDK-v2-basic-features\" class=\"headerlink\" title=\"Azure Storage SDK.v2 basic features\"></a>Azure Storage SDK.v2 basic features</h2><p><strong>Blobs</strong><br>    Create/Delete Containers<br>    Create/Read/Update/Delete Blobs<br><strong>Tables</strong><br>    Create/Delete Tables<br>    Query/Create/Read/Update/Delete Entities<br><strong>Files</strong><br>    Create/Delete Shares<br>    Create/Delete Directories<br><strong>Create/Read/Update/Delete Files</strong><br>    Queues<br>    Create/Delete Queues<br><strong>Insert/Peek Queue Messages</strong><br>    Advanced Queue Operations<br>    Service Properties<br><strong>Get Service Properties</strong><br>    Set Service Properties</p>\n<h2 id=\"Comparison-of-Azure-Storage-SDK-v2-and-SDKv-10-In-preview\"><a href=\"#Comparison-of-Azure-Storage-SDK-v2-and-SDKv-10-In-preview\" class=\"headerlink\" title=\"Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)\"></a>Comparison of Azure Storage SDK.v2 and SDKv.10 (In preview)</h2><table>\n<thead>\n<tr>\n<th>SDK Name</th>\n<th>Version</th>\n<th>Description</th>\n<th>NPM/API Reference Links</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-storage-js\" target=\"_blank\" rel=\"noopener\">storage SDK v10 for JavaScript</a></td>\n<td>v10-Preview</td>\n<td>The next generation async Storage SDK (Blob only, async and promise support)</td>\n<td><a href=\"https://www.npmjs.com/package/@azure/storage-blob\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-storage-node\" target=\"_blank\" rel=\"noopener\">Storage SDK v2 for JavaScript</a></td>\n<td>v2</td>\n<td>Legacy Storage SDK in this repository (Blob/Queue/File/Table, callback style)</td>\n<td><a href=\"https://www.npmjs.com/package/azure-storage\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Azure/azure-sdk-for-node\" target=\"_blank\" rel=\"noopener\">Azure Management SDKs for JavaScript</a></td>\n<td>v2</td>\n<td>Management SDKs including Storage Resource Provider APIs</td>\n<td><a href=\"https://www.npmjs.com/package/azure\" target=\"_blank\" rel=\"noopener\">NPM - Reference</a></td>\n</tr>\n</tbody>\n</table>\n<p>Please check details on API reference documents:</p>\n<p><a href=\"https://docs.microsoft.com/en-us/javascript/api/azure-storage/?view=azure-node-latest\" target=\"_blank\" rel=\"noopener\">Microsoft official API document on docs.microsoft.com</a><br><a href=\"http://azure.github.io/azure-storage-node/\" target=\"_blank\" rel=\"noopener\">Generated API references on GitHub pages</a></p>\n<p><strong>Prerequisites</strong></p>\n<ol>\n<li>First of all, you need to install Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers using following npm package.<pre><code>👉 npm install azure-storage --save\n</code></pre></li>\n<li>Make sure you have Azure Storage account created in Azure and copy connection string <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account?tabs=azure-portal\" target=\"_blank\" rel=\"noopener\">Here is a quick guide to create Azure Storage Account</a></li>\n<li>Create a blob container</li>\n<li>Install dotenv package to save your Azure Storage Connection String other configurations<pre><code>👉 npm install dotenv --save\n</code></pre></li>\n</ol>\n<h2 id=\"Some-Code\"><a href=\"#Some-Code\" class=\"headerlink\" title=\"Some Code\"></a>Some Code</h2><script src=\"https://gist.github.com/ejazhussain/8b7fde5bcbb498bb6b5db4b18059e88a.js\"></script>\n"},{"title":"SharePoint Framework -  Image Gallery","date":"2019-02-08T16:56:23.000Z","description":"Image Gallery with Taxonomy filter, Typed Search and Pagination","featured_image":"https://www.ejazhussain.com/2019/02/08/spfx-image-gallery/post-featured.png","_content":"## SPFX Image Gallery with filtering\n\nThis post describe a SPFX application which implement an image gallery with taxonomy base filtering and typed search. This application also implement pagination.\n\nMy main aim is to build this application to get my hand dirty on SPFX, PnPJS, Office UI Fabric and related technologies.\n\n<strong>Here is screenshot of the final output</strong>\n\n![Image gallery](spfx-image-gallery.png)\n![Image with right side panel](spfx-image-gallery-with-panel.png)\n\n\n## Application Component's\n\n1. <strong>Taxonomy based filtering</strong>\nThis was not too complicated to build dynamic rest query based on selected metadata tag.\nTrick involves using the hidden list field TaxCatchAll. This field exists for all rows having taxonomy data, and includes all the terms used.TaxCatchAll field.\n![Metadata column filtering](taxonomy-query.png)\n2. <strong>Typed Search</strong>\nFor this demo, I am using oData string query operation \"startsWith\". You can build more complex query using other available oData query operations.  [Here is a nice article about oData Operations](https://social.technet.microsoft.com/wiki/contents/articles/35796.sharepoint-2013-using-rest-api-for-selecting-filtering-sorting-and-pagination-in-sharepoint-list.aspx)\n3. <strong>Right side popup panel</strong>\nThis is simply build using Office UI Fabric React Component ([Panel](https://developer.microsoft.com/en-us/fabric#/components/panel)) \n4. <strong>Pagination</strong>\nI must admit, I have spent more time on Pagination component compare to others, I just wanted to get this into a shape where we can start using this in real world scenarios.I have built pagination quite number of times before using JSOM using ListItemCollectionPosition object. \nFirst of all i would like say massive thank you to my colleague [Vardhaman Deshpande](https://www.vrdmn.com/) to resolve an issue regarding pagination.\nTo Build pagination i have tried below 3 options:\n<strong>Option1:</strong> I have tried using custom npm package for pagination [react-js-pagination](https://www.npmjs.com/package/react-js-pagination). Package works fine if you want to just build pagination without using any sort of filtering.\n<strong>Option2:</strong> PnPJS using hasNext attribute. In this approach, You have to save whole return items object with hasNext attribute for both Next and Previous state. You can be achieved pagination but somehow I have preferred option3.\n<strong>Option3:</strong> Similar to Option2 but you only need to save nextLink url into array for both Next and Previous state. This option also works fine with filtering.\n\n## Setting up the application\n\t\n1. Create a Department Term set with associated child terms, for example,  HR, Information Services, Sales, Marketing\n2. Create an Image Library and add some sample images\n3. Tag each image with Department Metadata Column\n4. Also fill in Title field for each image, this is require for typed search functionality\n\n\n## Source Code\n\n<a href=\"https://github.com/ejazhussain/SPFX-ImageGallery\" class=\"is-primary button is-medium github\">\n    <span class=\"icon is-medium\">\n      <i class=\"fab fa-github\"></i>\n    </span>\n    <span>Explore solution on GitHub</span>\n</a>\n\n","source":"_posts/spfx-image-gallery.md","raw":"---\ntitle: SharePoint Framework -  Image Gallery\ndate: 2019-02-08 16:56:23\ntags: [SPFX, Office UI Fabric]\ndescription: Image Gallery with Taxonomy filter, Typed Search and Pagination\ncategories: \nfeatured_image: post-featured.png  \n---\n## SPFX Image Gallery with filtering\n\nThis post describe a SPFX application which implement an image gallery with taxonomy base filtering and typed search. This application also implement pagination.\n\nMy main aim is to build this application to get my hand dirty on SPFX, PnPJS, Office UI Fabric and related technologies.\n\n<strong>Here is screenshot of the final output</strong>\n\n![Image gallery](spfx-image-gallery.png)\n![Image with right side panel](spfx-image-gallery-with-panel.png)\n\n\n## Application Component's\n\n1. <strong>Taxonomy based filtering</strong>\nThis was not too complicated to build dynamic rest query based on selected metadata tag.\nTrick involves using the hidden list field TaxCatchAll. This field exists for all rows having taxonomy data, and includes all the terms used.TaxCatchAll field.\n![Metadata column filtering](taxonomy-query.png)\n2. <strong>Typed Search</strong>\nFor this demo, I am using oData string query operation \"startsWith\". You can build more complex query using other available oData query operations.  [Here is a nice article about oData Operations](https://social.technet.microsoft.com/wiki/contents/articles/35796.sharepoint-2013-using-rest-api-for-selecting-filtering-sorting-and-pagination-in-sharepoint-list.aspx)\n3. <strong>Right side popup panel</strong>\nThis is simply build using Office UI Fabric React Component ([Panel](https://developer.microsoft.com/en-us/fabric#/components/panel)) \n4. <strong>Pagination</strong>\nI must admit, I have spent more time on Pagination component compare to others, I just wanted to get this into a shape where we can start using this in real world scenarios.I have built pagination quite number of times before using JSOM using ListItemCollectionPosition object. \nFirst of all i would like say massive thank you to my colleague [Vardhaman Deshpande](https://www.vrdmn.com/) to resolve an issue regarding pagination.\nTo Build pagination i have tried below 3 options:\n<strong>Option1:</strong> I have tried using custom npm package for pagination [react-js-pagination](https://www.npmjs.com/package/react-js-pagination). Package works fine if you want to just build pagination without using any sort of filtering.\n<strong>Option2:</strong> PnPJS using hasNext attribute. In this approach, You have to save whole return items object with hasNext attribute for both Next and Previous state. You can be achieved pagination but somehow I have preferred option3.\n<strong>Option3:</strong> Similar to Option2 but you only need to save nextLink url into array for both Next and Previous state. This option also works fine with filtering.\n\n## Setting up the application\n\t\n1. Create a Department Term set with associated child terms, for example,  HR, Information Services, Sales, Marketing\n2. Create an Image Library and add some sample images\n3. Tag each image with Department Metadata Column\n4. Also fill in Title field for each image, this is require for typed search functionality\n\n\n## Source Code\n\n<a href=\"https://github.com/ejazhussain/SPFX-ImageGallery\" class=\"is-primary button is-medium github\">\n    <span class=\"icon is-medium\">\n      <i class=\"fab fa-github\"></i>\n    </span>\n    <span>Explore solution on GitHub</span>\n</a>\n\n","slug":"spfx-image-gallery","published":1,"updated":"2019-03-10T14:35:24.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3dib0006kwet1p4j93k3","content":"<h2 id=\"SPFX-Image-Gallery-with-filtering\"><a href=\"#SPFX-Image-Gallery-with-filtering\" class=\"headerlink\" title=\"SPFX Image Gallery with filtering\"></a>SPFX Image Gallery with filtering</h2><p>This post describe a SPFX application which implement an image gallery with taxonomy base filtering and typed search. This application also implement pagination.</p>\n<p>My main aim is to build this application to get my hand dirty on SPFX, PnPJS, Office UI Fabric and related technologies.</p>\n<p><strong>Here is screenshot of the final output</strong></p>\n<p><img src=\"spfx-image-gallery.png\" alt=\"Image gallery\"><span class=\"image-caption\">Image gallery</span><br><img src=\"spfx-image-gallery-with-panel.png\" alt=\"Image with right side panel\"><span class=\"image-caption\">Image with right side panel</span></p>\n<h2 id=\"Application-Component’s\"><a href=\"#Application-Component’s\" class=\"headerlink\" title=\"Application Component’s\"></a>Application Component’s</h2><ol>\n<li><strong>Taxonomy based filtering</strong><br>This was not too complicated to build dynamic rest query based on selected metadata tag.<br>Trick involves using the hidden list field TaxCatchAll. This field exists for all rows having taxonomy data, and includes all the terms used.TaxCatchAll field.<br><img src=\"taxonomy-query.png\" alt=\"Metadata column filtering\"><span class=\"image-caption\">Metadata column filtering</span></li>\n<li><strong>Typed Search</strong><br>For this demo, I am using oData string query operation “startsWith”. You can build more complex query using other available oData query operations.  <a href=\"https://social.technet.microsoft.com/wiki/contents/articles/35796.sharepoint-2013-using-rest-api-for-selecting-filtering-sorting-and-pagination-in-sharepoint-list.aspx\" target=\"_blank\" rel=\"noopener\">Here is a nice article about oData Operations</a></li>\n<li><strong>Right side popup panel</strong><br>This is simply build using Office UI Fabric React Component (<a href=\"https://developer.microsoft.com/en-us/fabric#/components/panel\" target=\"_blank\" rel=\"noopener\">Panel</a>) </li>\n<li><strong>Pagination</strong><br>I must admit, I have spent more time on Pagination component compare to others, I just wanted to get this into a shape where we can start using this in real world scenarios.I have built pagination quite number of times before using JSOM using ListItemCollectionPosition object.<br>First of all i would like say massive thank you to my colleague <a href=\"https://www.vrdmn.com/\" target=\"_blank\" rel=\"noopener\">Vardhaman Deshpande</a> to resolve an issue regarding pagination.<br>To Build pagination i have tried below 3 options:<br><strong>Option1:</strong> I have tried using custom npm package for pagination <a href=\"https://www.npmjs.com/package/react-js-pagination\" target=\"_blank\" rel=\"noopener\">react-js-pagination</a>. Package works fine if you want to just build pagination without using any sort of filtering.<br><strong>Option2:</strong> PnPJS using hasNext attribute. In this approach, You have to save whole return items object with hasNext attribute for both Next and Previous state. You can be achieved pagination but somehow I have preferred option3.<br><strong>Option3:</strong> Similar to Option2 but you only need to save nextLink url into array for both Next and Previous state. This option also works fine with filtering.</li>\n</ol>\n<h2 id=\"Setting-up-the-application\"><a href=\"#Setting-up-the-application\" class=\"headerlink\" title=\"Setting up the application\"></a>Setting up the application</h2><ol>\n<li>Create a Department Term set with associated child terms, for example,  HR, Information Services, Sales, Marketing</li>\n<li>Create an Image Library and add some sample images</li>\n<li>Tag each image with Department Metadata Column</li>\n<li>Also fill in Title field for each image, this is require for typed search functionality</li>\n</ol>\n<h2 id=\"Source-Code\"><a href=\"#Source-Code\" class=\"headerlink\" title=\"Source Code\"></a>Source Code</h2><p><a href=\"https://github.com/ejazhussain/SPFX-ImageGallery\" class=\"is-primary button is-medium github\" target=\"_blank\" rel=\"noopener\"><br>    <span class=\"icon is-medium\"><br>      <i class=\"fab fa-github\"></i><br>    </span><br>    <span>Explore solution on GitHub</span><br></a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SPFX-Image-Gallery-with-filtering\"><a href=\"#SPFX-Image-Gallery-with-filtering\" class=\"headerlink\" title=\"SPFX Image Gallery with filtering\"></a>SPFX Image Gallery with filtering</h2><p>This post describe a SPFX application which implement an image gallery with taxonomy base filtering and typed search. This application also implement pagination.</p>\n<p>My main aim is to build this application to get my hand dirty on SPFX, PnPJS, Office UI Fabric and related technologies.</p>\n<p><strong>Here is screenshot of the final output</strong></p>\n<p><img src=\"spfx-image-gallery.png\" alt=\"Image gallery\"><br><img src=\"spfx-image-gallery-with-panel.png\" alt=\"Image with right side panel\"></p>\n<h2 id=\"Application-Component’s\"><a href=\"#Application-Component’s\" class=\"headerlink\" title=\"Application Component’s\"></a>Application Component’s</h2><ol>\n<li><strong>Taxonomy based filtering</strong><br>This was not too complicated to build dynamic rest query based on selected metadata tag.<br>Trick involves using the hidden list field TaxCatchAll. This field exists for all rows having taxonomy data, and includes all the terms used.TaxCatchAll field.<br><img src=\"taxonomy-query.png\" alt=\"Metadata column filtering\"></li>\n<li><strong>Typed Search</strong><br>For this demo, I am using oData string query operation “startsWith”. You can build more complex query using other available oData query operations.  <a href=\"https://social.technet.microsoft.com/wiki/contents/articles/35796.sharepoint-2013-using-rest-api-for-selecting-filtering-sorting-and-pagination-in-sharepoint-list.aspx\" target=\"_blank\" rel=\"noopener\">Here is a nice article about oData Operations</a></li>\n<li><strong>Right side popup panel</strong><br>This is simply build using Office UI Fabric React Component (<a href=\"https://developer.microsoft.com/en-us/fabric#/components/panel\" target=\"_blank\" rel=\"noopener\">Panel</a>) </li>\n<li><strong>Pagination</strong><br>I must admit, I have spent more time on Pagination component compare to others, I just wanted to get this into a shape where we can start using this in real world scenarios.I have built pagination quite number of times before using JSOM using ListItemCollectionPosition object.<br>First of all i would like say massive thank you to my colleague <a href=\"https://www.vrdmn.com/\" target=\"_blank\" rel=\"noopener\">Vardhaman Deshpande</a> to resolve an issue regarding pagination.<br>To Build pagination i have tried below 3 options:<br><strong>Option1:</strong> I have tried using custom npm package for pagination <a href=\"https://www.npmjs.com/package/react-js-pagination\" target=\"_blank\" rel=\"noopener\">react-js-pagination</a>. Package works fine if you want to just build pagination without using any sort of filtering.<br><strong>Option2:</strong> PnPJS using hasNext attribute. In this approach, You have to save whole return items object with hasNext attribute for both Next and Previous state. You can be achieved pagination but somehow I have preferred option3.<br><strong>Option3:</strong> Similar to Option2 but you only need to save nextLink url into array for both Next and Previous state. This option also works fine with filtering.</li>\n</ol>\n<h2 id=\"Setting-up-the-application\"><a href=\"#Setting-up-the-application\" class=\"headerlink\" title=\"Setting up the application\"></a>Setting up the application</h2><ol>\n<li>Create a Department Term set with associated child terms, for example,  HR, Information Services, Sales, Marketing</li>\n<li>Create an Image Library and add some sample images</li>\n<li>Tag each image with Department Metadata Column</li>\n<li>Also fill in Title field for each image, this is require for typed search functionality</li>\n</ol>\n<h2 id=\"Source-Code\"><a href=\"#Source-Code\" class=\"headerlink\" title=\"Source Code\"></a>Source Code</h2><p><a href=\"https://github.com/ejazhussain/SPFX-ImageGallery\" class=\"is-primary button is-medium github\" target=\"_blank\" rel=\"noopener\"><br>    <span class=\"icon is-medium\"><br>      <i class=\"fab fa-github\"></i><br>    </span><br>    <span>Explore solution on GitHub</span><br></a></p>\n"},{"layout":"post","title":"SPFX Application Customizer with App Insight","language":"English","description":"Azure App Insight configuration using SPFX Application customizer in SharePoint Modern Pages","date":"2018-12-16T18:53:19.000Z","category":null,"featured_image":"https://www.ejazhussain.com/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/post-featured.png","_content":"\n\n## SPFX Application Customizer with Azure App Insight and Custom Script\n\nPreviously i have explained how you can configure Azure App Insight in SharePoint Online classic mode. \n\nAs Microsoft driving towards SharePoint modern sites where it is not possible to edit Master Page to add your custom artefacts. However, you can still run custom scripts using different pnp provisoning engine templates etc.\n\nIn this post, I would like to show you following two scenarios\n\n1. How you can configure Azure Application Insight within SharePoint modern site using SPFX Application Customizer.\n2. How to add custom javascript snippet\n\nBefore i jump into more detail i would like to give credit to **Chris O' Brien**. He has written wonderful article on. [Use an SPFx Application Customizer to add JavaScript (e.g. header) to every page in a site](https://www.sharepointnutsandbolts.com/2017/06/SPFx-Application-Customizer-Global-JS-Page-Header.html)\n\n## Step 1 : Create Application Customizer empty project \n\nHere are wonderful tutorials available by microsoft [Getting Started with SPFX Application Customizer](https://docs.microsoft.com/en-us/sharepoint/dev/spfx/extensions/get-started/build-a-hello-world-extension)\n\n## Step2 : Install below npm package and import into your solution\n\n``` \n👉 npm install applicationinsights-js\n```\n\n**Prerequisite**\n\n1. Make sure you have valid Azure App Insight key\n2. Create a custom property called 'instrumentationKey' and add valid Azure App Insight Key under **serve.json** file under config folder\n\n{% asset_img custom-properties.png %}\n\n\n👉 Here is code snippet\n\n <script src=\"https://gist.github.com/ejazhussain/a1857b35fb28beb334e93280b66628b1.js\"></script>\n\nHappy SharePoint modernization!\n","source":"_posts/azure-appinsight-configurations-using-spfx-customizer.md","raw":"---\nlayout: post\ntitle: SPFX Application Customizer with App Insight\nlanguage: English\ntags:\n  - Modern SharePoint\n  - Azure App Insights\n  - SPFX\n  - Application Customizer\ndescription: \n  Azure App Insight configuration using SPFX Application customizer in\n  SharePoint Modern Pages\ndate: 2018-12-16 18:53:19\ncategory:\nfeatured_image: post-featured.png \n---\n\n\n## SPFX Application Customizer with Azure App Insight and Custom Script\n\nPreviously i have explained how you can configure Azure App Insight in SharePoint Online classic mode. \n\nAs Microsoft driving towards SharePoint modern sites where it is not possible to edit Master Page to add your custom artefacts. However, you can still run custom scripts using different pnp provisoning engine templates etc.\n\nIn this post, I would like to show you following two scenarios\n\n1. How you can configure Azure Application Insight within SharePoint modern site using SPFX Application Customizer.\n2. How to add custom javascript snippet\n\nBefore i jump into more detail i would like to give credit to **Chris O' Brien**. He has written wonderful article on. [Use an SPFx Application Customizer to add JavaScript (e.g. header) to every page in a site](https://www.sharepointnutsandbolts.com/2017/06/SPFx-Application-Customizer-Global-JS-Page-Header.html)\n\n## Step 1 : Create Application Customizer empty project \n\nHere are wonderful tutorials available by microsoft [Getting Started with SPFX Application Customizer](https://docs.microsoft.com/en-us/sharepoint/dev/spfx/extensions/get-started/build-a-hello-world-extension)\n\n## Step2 : Install below npm package and import into your solution\n\n``` \n👉 npm install applicationinsights-js\n```\n\n**Prerequisite**\n\n1. Make sure you have valid Azure App Insight key\n2. Create a custom property called 'instrumentationKey' and add valid Azure App Insight Key under **serve.json** file under config folder\n\n{% asset_img custom-properties.png %}\n\n\n👉 Here is code snippet\n\n <script src=\"https://gist.github.com/ejazhussain/a1857b35fb28beb334e93280b66628b1.js\"></script>\n\nHappy SharePoint modernization!\n","slug":"azure-appinsight-configurations-using-spfx-customizer","published":1,"updated":"2018-12-24T17:38:32.748Z","comments":1,"photos":[],"link":"","_id":"cju7b3dib0008kwetxeeqam4l","content":"<h2 id=\"SPFX-Application-Customizer-with-Azure-App-Insight-and-Custom-Script\"><a href=\"#SPFX-Application-Customizer-with-Azure-App-Insight-and-Custom-Script\" class=\"headerlink\" title=\"SPFX Application Customizer with Azure App Insight and Custom Script\"></a>SPFX Application Customizer with Azure App Insight and Custom Script</h2><p>Previously i have explained how you can configure Azure App Insight in SharePoint Online classic mode. </p>\n<p>As Microsoft driving towards SharePoint modern sites where it is not possible to edit Master Page to add your custom artefacts. However, you can still run custom scripts using different pnp provisoning engine templates etc.</p>\n<p>In this post, I would like to show you following two scenarios</p>\n<ol>\n<li>How you can configure Azure Application Insight within SharePoint modern site using SPFX Application Customizer.</li>\n<li>How to add custom javascript snippet</li>\n</ol>\n<p>Before i jump into more detail i would like to give credit to <strong>Chris O’ Brien</strong>. He has written wonderful article on. <a href=\"https://www.sharepointnutsandbolts.com/2017/06/SPFx-Application-Customizer-Global-JS-Page-Header.html\" target=\"_blank\" rel=\"noopener\">Use an SPFx Application Customizer to add JavaScript (e.g. header) to every page in a site</a></p>\n<h2 id=\"Step-1-Create-Application-Customizer-empty-project\"><a href=\"#Step-1-Create-Application-Customizer-empty-project\" class=\"headerlink\" title=\"Step 1 : Create Application Customizer empty project\"></a>Step 1 : Create Application Customizer empty project</h2><p>Here are wonderful tutorials available by microsoft <a href=\"https://docs.microsoft.com/en-us/sharepoint/dev/spfx/extensions/get-started/build-a-hello-world-extension\" target=\"_blank\" rel=\"noopener\">Getting Started with SPFX Application Customizer</a></p>\n<h2 id=\"Step2-Install-below-npm-package-and-import-into-your-solution\"><a href=\"#Step2-Install-below-npm-package-and-import-into-your-solution\" class=\"headerlink\" title=\"Step2 : Install below npm package and import into your solution\"></a>Step2 : Install below npm package and import into your solution</h2><pre><code>👉 npm install applicationinsights-js\n</code></pre><p><strong>Prerequisite</strong></p>\n<ol>\n<li>Make sure you have valid Azure App Insight key</li>\n<li>Create a custom property called ‘instrumentationKey’ and add valid Azure App Insight Key under <strong>serve.json</strong> file under config folder</li>\n</ol>\n<img src=\"/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/custom-properties.png\">\n<p>👉 Here is code snippet</p>\n <script src=\"https://gist.github.com/ejazhussain/a1857b35fb28beb334e93280b66628b1.js\"></script>\n\n<p>Happy SharePoint modernization!</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SPFX-Application-Customizer-with-Azure-App-Insight-and-Custom-Script\"><a href=\"#SPFX-Application-Customizer-with-Azure-App-Insight-and-Custom-Script\" class=\"headerlink\" title=\"SPFX Application Customizer with Azure App Insight and Custom Script\"></a>SPFX Application Customizer with Azure App Insight and Custom Script</h2><p>Previously i have explained how you can configure Azure App Insight in SharePoint Online classic mode. </p>\n<p>As Microsoft driving towards SharePoint modern sites where it is not possible to edit Master Page to add your custom artefacts. However, you can still run custom scripts using different pnp provisoning engine templates etc.</p>\n<p>In this post, I would like to show you following two scenarios</p>\n<ol>\n<li>How you can configure Azure Application Insight within SharePoint modern site using SPFX Application Customizer.</li>\n<li>How to add custom javascript snippet</li>\n</ol>\n<p>Before i jump into more detail i would like to give credit to <strong>Chris O’ Brien</strong>. He has written wonderful article on. <a href=\"https://www.sharepointnutsandbolts.com/2017/06/SPFx-Application-Customizer-Global-JS-Page-Header.html\" target=\"_blank\" rel=\"noopener\">Use an SPFx Application Customizer to add JavaScript (e.g. header) to every page in a site</a></p>\n<h2 id=\"Step-1-Create-Application-Customizer-empty-project\"><a href=\"#Step-1-Create-Application-Customizer-empty-project\" class=\"headerlink\" title=\"Step 1 : Create Application Customizer empty project\"></a>Step 1 : Create Application Customizer empty project</h2><p>Here are wonderful tutorials available by microsoft <a href=\"https://docs.microsoft.com/en-us/sharepoint/dev/spfx/extensions/get-started/build-a-hello-world-extension\" target=\"_blank\" rel=\"noopener\">Getting Started with SPFX Application Customizer</a></p>\n<h2 id=\"Step2-Install-below-npm-package-and-import-into-your-solution\"><a href=\"#Step2-Install-below-npm-package-and-import-into-your-solution\" class=\"headerlink\" title=\"Step2 : Install below npm package and import into your solution\"></a>Step2 : Install below npm package and import into your solution</h2><pre><code>👉 npm install applicationinsights-js\n</code></pre><p><strong>Prerequisite</strong></p>\n<ol>\n<li>Make sure you have valid Azure App Insight key</li>\n<li>Create a custom property called ‘instrumentationKey’ and add valid Azure App Insight Key under <strong>serve.json</strong> file under config folder</li>\n</ol>\n<img src=\"/2018/12/16/azure-appinsight-configurations-using-spfx-customizer/custom-properties.png\">\n<p>👉 Here is code snippet</p>\n <script src=\"https://gist.github.com/ejazhussain/a1857b35fb28beb334e93280b66628b1.js\"></script>\n\n<p>Happy SharePoint modernization!</p>\n"},{"title":"SharePoint Modern List Formatting Using JSON","date":"2019-03-03T18:03:31.000Z","description":"SharePoint Modern List Formatting Using JSON","category":null,"featured_image":"https://www.ejazhussain.com/2019/03/03/list-json-formatting/post-featured.png","_content":"\n## SharePoint Modern List Formatting Using JSON\n\nRecently I had a chance to explore SharePoint modern list formatting using JSON. I must say it is fun and powerful feature to build highly customized UI right from out of the box list without using custom code solution.\n\nIf you are looking to customize list column or row UI then here are very useful [Samples](https://github.com/SharePoint/sp-dev-list-formatting) available which will give you a good place to start.\n\nFor more detail about syntax of JSON and what is involved in term of accessing data as well how can you override existing UI, visit [Use view formatting to customize SharePoint](https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/view-formatting)\n\n\n<script src=\"https://gist.github.com/ejazhussain/f9a686f230715b08763b5b294f4ff033.js\"></script>\n\nHere is final output of the profile card\n![Profile Card](profile-card.png)\n\n\n## Source Code\n\n<a href=\"https://github.com/ejazhussain/List-Json-Formatting/tree/master/profile-card\" class=\"is-primary button is-medium github\">\n    <span class=\"icon is-medium\">\n      <i class=\"fab fa-github\"></i>\n    </span>\n    <span>Explore solution on GitHub</span>\n  </a>\n","source":"_posts/list-json-formatting.md","raw":"---\ntitle: SharePoint Modern List Formatting Using JSON\ndate: 2019-03-03 18:03:31\ndescription: SharePoint Modern List Formatting Using JSON\ntags:\n    - Modern SharePoint List\n    - JSON Formatting\ncategory:\nfeatured_image: post-featured.png\n---\n\n## SharePoint Modern List Formatting Using JSON\n\nRecently I had a chance to explore SharePoint modern list formatting using JSON. I must say it is fun and powerful feature to build highly customized UI right from out of the box list without using custom code solution.\n\nIf you are looking to customize list column or row UI then here are very useful [Samples](https://github.com/SharePoint/sp-dev-list-formatting) available which will give you a good place to start.\n\nFor more detail about syntax of JSON and what is involved in term of accessing data as well how can you override existing UI, visit [Use view formatting to customize SharePoint](https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/view-formatting)\n\n\n<script src=\"https://gist.github.com/ejazhussain/f9a686f230715b08763b5b294f4ff033.js\"></script>\n\nHere is final output of the profile card\n![Profile Card](profile-card.png)\n\n\n## Source Code\n\n<a href=\"https://github.com/ejazhussain/List-Json-Formatting/tree/master/profile-card\" class=\"is-primary button is-medium github\">\n    <span class=\"icon is-medium\">\n      <i class=\"fab fa-github\"></i>\n    </span>\n    <span>Explore solution on GitHub</span>\n  </a>\n","slug":"list-json-formatting","published":1,"updated":"2019-03-03T22:43:06.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3dib0009kwetuqi911ox","content":"<h2 id=\"SharePoint-Modern-List-Formatting-Using-JSON\"><a href=\"#SharePoint-Modern-List-Formatting-Using-JSON\" class=\"headerlink\" title=\"SharePoint Modern List Formatting Using JSON\"></a>SharePoint Modern List Formatting Using JSON</h2><p>Recently I had a chance to explore SharePoint modern list formatting using JSON. I must say it is fun and powerful feature to build highly customized UI right from out of the box list without using custom code solution.</p>\n<p>If you are looking to customize list column or row UI then here are very useful <a href=\"https://github.com/SharePoint/sp-dev-list-formatting\" target=\"_blank\" rel=\"noopener\">Samples</a> available which will give you a good place to start.</p>\n<p>For more detail about syntax of JSON and what is involved in term of accessing data as well how can you override existing UI, visit <a href=\"https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/view-formatting\" target=\"_blank\" rel=\"noopener\">Use view formatting to customize SharePoint</a></p>\n<script src=\"https://gist.github.com/ejazhussain/f9a686f230715b08763b5b294f4ff033.js\"></script>\n\n<p>Here is final output of the profile card<br><img src=\"profile-card.png\" alt=\"Profile Card\"><span class=\"image-caption\">Profile Card</span></p>\n<h2 id=\"Source-Code\"><a href=\"#Source-Code\" class=\"headerlink\" title=\"Source Code\"></a>Source Code</h2><p><a href=\"https://github.com/ejazhussain/List-Json-Formatting/tree/master/profile-card\" class=\"is-primary button is-medium github\" target=\"_blank\" rel=\"noopener\"><br>    <span class=\"icon is-medium\"><br>      <i class=\"fab fa-github\"></i><br>    </span><br>    <span>Explore solution on GitHub</span><br>  </a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SharePoint-Modern-List-Formatting-Using-JSON\"><a href=\"#SharePoint-Modern-List-Formatting-Using-JSON\" class=\"headerlink\" title=\"SharePoint Modern List Formatting Using JSON\"></a>SharePoint Modern List Formatting Using JSON</h2><p>Recently I had a chance to explore SharePoint modern list formatting using JSON. I must say it is fun and powerful feature to build highly customized UI right from out of the box list without using custom code solution.</p>\n<p>If you are looking to customize list column or row UI then here are very useful <a href=\"https://github.com/SharePoint/sp-dev-list-formatting\" target=\"_blank\" rel=\"noopener\">Samples</a> available which will give you a good place to start.</p>\n<p>For more detail about syntax of JSON and what is involved in term of accessing data as well how can you override existing UI, visit <a href=\"https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/view-formatting\" target=\"_blank\" rel=\"noopener\">Use view formatting to customize SharePoint</a></p>\n<script src=\"https://gist.github.com/ejazhussain/f9a686f230715b08763b5b294f4ff033.js\"></script>\n\n<p>Here is final output of the profile card<br><img src=\"profile-card.png\" alt=\"Profile Card\"></p>\n<h2 id=\"Source-Code\"><a href=\"#Source-Code\" class=\"headerlink\" title=\"Source Code\"></a>Source Code</h2><p><a href=\"https://github.com/ejazhussain/List-Json-Formatting/tree/master/profile-card\" class=\"is-primary button is-medium github\" target=\"_blank\" rel=\"noopener\"><br>    <span class=\"icon is-medium\"><br>      <i class=\"fab fa-github\"></i><br>    </span><br>    <span>Explore solution on GitHub</span><br>  </a></p>\n"},{"title":"Approval process using Microsoft Flow and SharePoint Online","date":"2019-03-10T13:47:32.000Z","description":"Implementation of approval process using SharePoint and Microsoft Flow","category":null,"featured_image":"https://www.ejazhussain.com/2019/03/10/sharepoint-approval-task-using-flow/post-featured.png","_content":"## Approval process using Microsoft Flow and SharePoint Online\n\nIf you are looking to build an approval workflow using Microsoft Flow, then here are simple steps which will help you to create one.\n\n### Scenario \n\nFor example, I have a SharePoint list called Projects and on creation of a new project i would like to run an approval workflow.\n\n![Project List](project-list.png)\n\nHere are over all 5 steps which we are going to implement one by one for our approval workflow.\n\n![Complete Flow Steps](complete-flow-steps.png)\n\nFirst of all, Create your workflow from blank template\n\n![Create Flow from Blank Template](flow-blank-template.png)\n\n### Step 1 - When Item Is Created or Modified\n\nUnder SharePoint action, select SharePoint Trigger called **When Item Is Created Or Modified**. Add your site collection URL and select associated  list or library. In my case this will be a project list.\n\n*If you cannot select your site collection URL from Site Address dropdown field, then you can click on **Enter Custom Value** option to add your site collection URL*\n\n![When Item Is Created Or Modified SharePoint Trigger](item-created-modified.png)\n\n### Step 2 - Get File Metadata\n\nIn this step, we need to grab the metadata of newly created SharePoint List Item. The reason we need this, we need to get ETAG, which we need in later steps.\n\n![SharePoint Action - Get File Metadata](get-file-metadata.png)\n\n### Step 3 - Start and wait for an approval \n\nIn this step, add and configure, **Start and wait for an approval** action. It’s worth mentioning here that you can direclty add Markdown styles in Detail field. see below screenshot\n\n**Approval Type Field**: You can select two options, 1- Everyone must approve 2- First to response. In this case, I will be selecting *Everyone must approve*. In rest of the fields, You can add dynamic data from associated list (In our case, It’s **Projects** list)\n\n![Approvals Action - Start and wait for an approval](start-approval-action.png)\n\n### Step 4 - Condition\n\nHere we need to add **Condition** action to check if outcome of the response is approve or reject. And base on the outcome, we need to set the content approval status of the SharePoint list item.\n\n![Condition Action](conditon.png)\n\n![Set Content Approval Status](content-approval-status.png)\n\n### Step 5 - Send Outcome as an email\n\nIn this task, we need to send an outcome of the approval by email to submitter or prepare of the project. For this, we need to use **Office 365 Outlook Action - Send an email**\n\n![Send an email action](send-email-action.png)\n\n*Make sure to run Flow Checker to check for any errors or warnings*\n\n![Flow checker](flow-checker.png)\n\n\n## Notification Email and Approve or Reject Actions\n\nThis is how notification email looks like. As mentioned above, you can style body of the task using Markdown. \n\n![Task notification email](task-notification-email.png)\n\none of the game changers for Flow is, you can simply approve or reject tasks directly from your email. You can also add additional comments. see below.\n\n![Approve or reject outcome action](approve-reject-comments.png)\n\nOnce task approved, here is a final email notification to submitter looks like.\n\n![Task outcome email](confirmation-email.png)\n\nAnd associated  Project list is updated with the outcome \n\n![Task outcome](list-approver-response.png)\n\nThis is very simple scenario of Approval process using Flow. You can build more complex scenario for example, adding multiple conditionally approvers based on outcome from the first approver etc. \n\nHope you found this post useful!\n\n\n\n\n\n\n\n","source":"_posts/sharepoint-approval-task-using-flow.md","raw":"---\ntitle: Approval process using Microsoft Flow and SharePoint Online\ndate: 2019-03-10 13:47:32\ndescription: Implementation of approval process using SharePoint and Microsoft Flow\ntags: \n    - Microsoft Flow\n    - Workflow\n    - SharePoint Online\ncategory:\nfeatured_image: post-featured.png\n---\n## Approval process using Microsoft Flow and SharePoint Online\n\nIf you are looking to build an approval workflow using Microsoft Flow, then here are simple steps which will help you to create one.\n\n### Scenario \n\nFor example, I have a SharePoint list called Projects and on creation of a new project i would like to run an approval workflow.\n\n![Project List](project-list.png)\n\nHere are over all 5 steps which we are going to implement one by one for our approval workflow.\n\n![Complete Flow Steps](complete-flow-steps.png)\n\nFirst of all, Create your workflow from blank template\n\n![Create Flow from Blank Template](flow-blank-template.png)\n\n### Step 1 - When Item Is Created or Modified\n\nUnder SharePoint action, select SharePoint Trigger called **When Item Is Created Or Modified**. Add your site collection URL and select associated  list or library. In my case this will be a project list.\n\n*If you cannot select your site collection URL from Site Address dropdown field, then you can click on **Enter Custom Value** option to add your site collection URL*\n\n![When Item Is Created Or Modified SharePoint Trigger](item-created-modified.png)\n\n### Step 2 - Get File Metadata\n\nIn this step, we need to grab the metadata of newly created SharePoint List Item. The reason we need this, we need to get ETAG, which we need in later steps.\n\n![SharePoint Action - Get File Metadata](get-file-metadata.png)\n\n### Step 3 - Start and wait for an approval \n\nIn this step, add and configure, **Start and wait for an approval** action. It’s worth mentioning here that you can direclty add Markdown styles in Detail field. see below screenshot\n\n**Approval Type Field**: You can select two options, 1- Everyone must approve 2- First to response. In this case, I will be selecting *Everyone must approve*. In rest of the fields, You can add dynamic data from associated list (In our case, It’s **Projects** list)\n\n![Approvals Action - Start and wait for an approval](start-approval-action.png)\n\n### Step 4 - Condition\n\nHere we need to add **Condition** action to check if outcome of the response is approve or reject. And base on the outcome, we need to set the content approval status of the SharePoint list item.\n\n![Condition Action](conditon.png)\n\n![Set Content Approval Status](content-approval-status.png)\n\n### Step 5 - Send Outcome as an email\n\nIn this task, we need to send an outcome of the approval by email to submitter or prepare of the project. For this, we need to use **Office 365 Outlook Action - Send an email**\n\n![Send an email action](send-email-action.png)\n\n*Make sure to run Flow Checker to check for any errors or warnings*\n\n![Flow checker](flow-checker.png)\n\n\n## Notification Email and Approve or Reject Actions\n\nThis is how notification email looks like. As mentioned above, you can style body of the task using Markdown. \n\n![Task notification email](task-notification-email.png)\n\none of the game changers for Flow is, you can simply approve or reject tasks directly from your email. You can also add additional comments. see below.\n\n![Approve or reject outcome action](approve-reject-comments.png)\n\nOnce task approved, here is a final email notification to submitter looks like.\n\n![Task outcome email](confirmation-email.png)\n\nAnd associated  Project list is updated with the outcome \n\n![Task outcome](list-approver-response.png)\n\nThis is very simple scenario of Approval process using Flow. You can build more complex scenario for example, adding multiple conditionally approvers based on outcome from the first approver etc. \n\nHope you found this post useful!\n\n\n\n\n\n\n\n","slug":"sharepoint-approval-task-using-flow","published":1,"updated":"2019-03-10T17:30:08.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju7b3din000ckwetmbhz4ur0","content":"<h2 id=\"Approval-process-using-Microsoft-Flow-and-SharePoint-Online\"><a href=\"#Approval-process-using-Microsoft-Flow-and-SharePoint-Online\" class=\"headerlink\" title=\"Approval process using Microsoft Flow and SharePoint Online\"></a>Approval process using Microsoft Flow and SharePoint Online</h2><p>If you are looking to build an approval workflow using Microsoft Flow, then here are simple steps which will help you to create one.</p>\n<h3 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h3><p>For example, I have a SharePoint list called Projects and on creation of a new project i would like to run an approval workflow.</p>\n<p><img src=\"project-list.png\" alt=\"Project List\"><span class=\"image-caption\">Project List</span></p>\n<p>Here are over all 5 steps which we are going to implement one by one for our approval workflow.</p>\n<p><img src=\"complete-flow-steps.png\" alt=\"Complete Flow Steps\"><span class=\"image-caption\">Complete Flow Steps</span></p>\n<p>First of all, Create your workflow from blank template</p>\n<p><img src=\"flow-blank-template.png\" alt=\"Create Flow from Blank Template\"><span class=\"image-caption\">Create Flow from Blank Template</span></p>\n<h3 id=\"Step-1-When-Item-Is-Created-or-Modified\"><a href=\"#Step-1-When-Item-Is-Created-or-Modified\" class=\"headerlink\" title=\"Step 1 - When Item Is Created or Modified\"></a>Step 1 - When Item Is Created or Modified</h3><p>Under SharePoint action, select SharePoint Trigger called <strong>When Item Is Created Or Modified</strong>. Add your site collection URL and select associated  list or library. In my case this will be a project list.</p>\n<p><em>If you cannot select your site collection URL from Site Address dropdown field, then you can click on <strong>Enter Custom Value</strong> option to add your site collection URL</em></p>\n<p><img src=\"item-created-modified.png\" alt=\"When Item Is Created Or Modified SharePoint Trigger\"><span class=\"image-caption\">When Item Is Created Or Modified SharePoint Trigger</span></p>\n<h3 id=\"Step-2-Get-File-Metadata\"><a href=\"#Step-2-Get-File-Metadata\" class=\"headerlink\" title=\"Step 2 - Get File Metadata\"></a>Step 2 - Get File Metadata</h3><p>In this step, we need to grab the metadata of newly created SharePoint List Item. The reason we need this, we need to get ETAG, which we need in later steps.</p>\n<p><img src=\"get-file-metadata.png\" alt=\"SharePoint Action - Get File Metadata\"><span class=\"image-caption\">SharePoint Action - Get File Metadata</span></p>\n<h3 id=\"Step-3-Start-and-wait-for-an-approval\"><a href=\"#Step-3-Start-and-wait-for-an-approval\" class=\"headerlink\" title=\"Step 3 - Start and wait for an approval\"></a>Step 3 - Start and wait for an approval</h3><p>In this step, add and configure, <strong>Start and wait for an approval</strong> action. It’s worth mentioning here that you can direclty add Markdown styles in Detail field. see below screenshot</p>\n<p><strong>Approval Type Field</strong>: You can select two options, 1- Everyone must approve 2- First to response. In this case, I will be selecting <em>Everyone must approve</em>. In rest of the fields, You can add dynamic data from associated list (In our case, It’s <strong>Projects</strong> list)</p>\n<p><img src=\"start-approval-action.png\" alt=\"Approvals Action - Start and wait for an approval\"><span class=\"image-caption\">Approvals Action - Start and wait for an approval</span></p>\n<h3 id=\"Step-4-Condition\"><a href=\"#Step-4-Condition\" class=\"headerlink\" title=\"Step 4 - Condition\"></a>Step 4 - Condition</h3><p>Here we need to add <strong>Condition</strong> action to check if outcome of the response is approve or reject. And base on the outcome, we need to set the content approval status of the SharePoint list item.</p>\n<p><img src=\"conditon.png\" alt=\"Condition Action\"><span class=\"image-caption\">Condition Action</span></p>\n<p><img src=\"content-approval-status.png\" alt=\"Set Content Approval Status\"><span class=\"image-caption\">Set Content Approval Status</span></p>\n<h3 id=\"Step-5-Send-Outcome-as-an-email\"><a href=\"#Step-5-Send-Outcome-as-an-email\" class=\"headerlink\" title=\"Step 5 - Send Outcome as an email\"></a>Step 5 - Send Outcome as an email</h3><p>In this task, we need to send an outcome of the approval by email to submitter or prepare of the project. For this, we need to use <strong>Office 365 Outlook Action - Send an email</strong></p>\n<p><img src=\"send-email-action.png\" alt=\"Send an email action\"><span class=\"image-caption\">Send an email action</span></p>\n<p><em>Make sure to run Flow Checker to check for any errors or warnings</em></p>\n<p><img src=\"flow-checker.png\" alt=\"Flow checker\"><span class=\"image-caption\">Flow checker</span></p>\n<h2 id=\"Notification-Email-and-Approve-or-Reject-Actions\"><a href=\"#Notification-Email-and-Approve-or-Reject-Actions\" class=\"headerlink\" title=\"Notification Email and Approve or Reject Actions\"></a>Notification Email and Approve or Reject Actions</h2><p>This is how notification email looks like. As mentioned above, you can style body of the task using Markdown. </p>\n<p><img src=\"task-notification-email.png\" alt=\"Task notification email\"><span class=\"image-caption\">Task notification email</span></p>\n<p>one of the game changers for Flow is, you can simply approve or reject tasks directly from your email. You can also add additional comments. see below.</p>\n<p><img src=\"approve-reject-comments.png\" alt=\"Approve or reject outcome action\"><span class=\"image-caption\">Approve or reject outcome action</span></p>\n<p>Once task approved, here is a final email notification to submitter looks like.</p>\n<p><img src=\"confirmation-email.png\" alt=\"Task outcome email\"><span class=\"image-caption\">Task outcome email</span></p>\n<p>And associated  Project list is updated with the outcome </p>\n<p><img src=\"list-approver-response.png\" alt=\"Task outcome\"><span class=\"image-caption\">Task outcome</span></p>\n<p>This is very simple scenario of Approval process using Flow. You can build more complex scenario for example, adding multiple conditionally approvers based on outcome from the first approver etc. </p>\n<p>Hope you found this post useful!</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Approval-process-using-Microsoft-Flow-and-SharePoint-Online\"><a href=\"#Approval-process-using-Microsoft-Flow-and-SharePoint-Online\" class=\"headerlink\" title=\"Approval process using Microsoft Flow and SharePoint Online\"></a>Approval process using Microsoft Flow and SharePoint Online</h2><p>If you are looking to build an approval workflow using Microsoft Flow, then here are simple steps which will help you to create one.</p>\n<h3 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h3><p>For example, I have a SharePoint list called Projects and on creation of a new project i would like to run an approval workflow.</p>\n<p><img src=\"project-list.png\" alt=\"Project List\"></p>\n<p>Here are over all 5 steps which we are going to implement one by one for our approval workflow.</p>\n<p><img src=\"complete-flow-steps.png\" alt=\"Complete Flow Steps\"></p>\n<p>First of all, Create your workflow from blank template</p>\n<p><img src=\"flow-blank-template.png\" alt=\"Create Flow from Blank Template\"></p>\n<h3 id=\"Step-1-When-Item-Is-Created-or-Modified\"><a href=\"#Step-1-When-Item-Is-Created-or-Modified\" class=\"headerlink\" title=\"Step 1 - When Item Is Created or Modified\"></a>Step 1 - When Item Is Created or Modified</h3><p>Under SharePoint action, select SharePoint Trigger called <strong>When Item Is Created Or Modified</strong>. Add your site collection URL and select associated  list or library. In my case this will be a project list.</p>\n<p><em>If you cannot select your site collection URL from Site Address dropdown field, then you can click on <strong>Enter Custom Value</strong> option to add your site collection URL</em></p>\n<p><img src=\"item-created-modified.png\" alt=\"When Item Is Created Or Modified SharePoint Trigger\"></p>\n<h3 id=\"Step-2-Get-File-Metadata\"><a href=\"#Step-2-Get-File-Metadata\" class=\"headerlink\" title=\"Step 2 - Get File Metadata\"></a>Step 2 - Get File Metadata</h3><p>In this step, we need to grab the metadata of newly created SharePoint List Item. The reason we need this, we need to get ETAG, which we need in later steps.</p>\n<p><img src=\"get-file-metadata.png\" alt=\"SharePoint Action - Get File Metadata\"></p>\n<h3 id=\"Step-3-Start-and-wait-for-an-approval\"><a href=\"#Step-3-Start-and-wait-for-an-approval\" class=\"headerlink\" title=\"Step 3 - Start and wait for an approval\"></a>Step 3 - Start and wait for an approval</h3><p>In this step, add and configure, <strong>Start and wait for an approval</strong> action. It’s worth mentioning here that you can direclty add Markdown styles in Detail field. see below screenshot</p>\n<p><strong>Approval Type Field</strong>: You can select two options, 1- Everyone must approve 2- First to response. In this case, I will be selecting <em>Everyone must approve</em>. In rest of the fields, You can add dynamic data from associated list (In our case, It’s <strong>Projects</strong> list)</p>\n<p><img src=\"start-approval-action.png\" alt=\"Approvals Action - Start and wait for an approval\"></p>\n<h3 id=\"Step-4-Condition\"><a href=\"#Step-4-Condition\" class=\"headerlink\" title=\"Step 4 - Condition\"></a>Step 4 - Condition</h3><p>Here we need to add <strong>Condition</strong> action to check if outcome of the response is approve or reject. And base on the outcome, we need to set the content approval status of the SharePoint list item.</p>\n<p><img src=\"conditon.png\" alt=\"Condition Action\"></p>\n<p><img src=\"content-approval-status.png\" alt=\"Set Content Approval Status\"></p>\n<h3 id=\"Step-5-Send-Outcome-as-an-email\"><a href=\"#Step-5-Send-Outcome-as-an-email\" class=\"headerlink\" title=\"Step 5 - Send Outcome as an email\"></a>Step 5 - Send Outcome as an email</h3><p>In this task, we need to send an outcome of the approval by email to submitter or prepare of the project. For this, we need to use <strong>Office 365 Outlook Action - Send an email</strong></p>\n<p><img src=\"send-email-action.png\" alt=\"Send an email action\"></p>\n<p><em>Make sure to run Flow Checker to check for any errors or warnings</em></p>\n<p><img src=\"flow-checker.png\" alt=\"Flow checker\"></p>\n<h2 id=\"Notification-Email-and-Approve-or-Reject-Actions\"><a href=\"#Notification-Email-and-Approve-or-Reject-Actions\" class=\"headerlink\" title=\"Notification Email and Approve or Reject Actions\"></a>Notification Email and Approve or Reject Actions</h2><p>This is how notification email looks like. As mentioned above, you can style body of the task using Markdown. </p>\n<p><img src=\"task-notification-email.png\" alt=\"Task notification email\"></p>\n<p>one of the game changers for Flow is, you can simply approve or reject tasks directly from your email. You can also add additional comments. see below.</p>\n<p><img src=\"approve-reject-comments.png\" alt=\"Approve or reject outcome action\"></p>\n<p>Once task approved, here is a final email notification to submitter looks like.</p>\n<p><img src=\"confirmation-email.png\" alt=\"Task outcome email\"></p>\n<p>And associated  Project list is updated with the outcome </p>\n<p><img src=\"list-approver-response.png\" alt=\"Task outcome\"></p>\n<p>This is very simple scenario of Approval process using Flow. You can build more complex scenario for example, adding multiple conditionally approvers based on outcome from the first approver etc. </p>\n<p>Hope you found this post useful!</p>\n"},{"title":"Office 365 Usage Reports using Microsoft Graph API","date":"2019-04-07T16:44:19.000Z","description":"This web part shows SharePoint Online, OnDrive and Outlook usage reports using SPFX and Microsoft Graph API","category":null,"featured_image":"http://localhost:4000/2019/04/07/spfx-office365-reports/post-featured.png","_content":"## Office 365 Usage Reports using SPFX and Microsoft Graph API\n\naa\n\n","source":"_posts/spfx-office365-reports.md","raw":"---\ntitle: Office 365 Usage Reports using Microsoft Graph API\ndate: 2019-04-07 17:44:19\ndescription: This web part shows SharePoint Online, OnDrive and Outlook usage reports using SPFX and Microsoft Graph API\ntags: [SPFX, Microsoft Graph API, Charts]\ncategory:\nfeatured_image: post-featured.png  \n---\n## Office 365 Usage Reports using SPFX and Microsoft Graph API\n\naa\n\n","slug":"spfx-office365-reports","published":1,"updated":"2019-04-07T19:16:20.339Z","_id":"cju7b3dip000ekwetdo13k5en","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Office-365-Usage-Reports-using-SPFX-and-Microsoft-Graph-API\"><a href=\"#Office-365-Usage-Reports-using-SPFX-and-Microsoft-Graph-API\" class=\"headerlink\" title=\"Office 365 Usage Reports using SPFX and Microsoft Graph API\"></a>Office 365 Usage Reports using SPFX and Microsoft Graph API</h2><p>aa</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Office-365-Usage-Reports-using-SPFX-and-Microsoft-Graph-API\"><a href=\"#Office-365-Usage-Reports-using-SPFX-and-Microsoft-Graph-API\" class=\"headerlink\" title=\"Office 365 Usage Reports using SPFX and Microsoft Graph API\"></a>Office 365 Usage Reports using SPFX and Microsoft Graph API</h2><p>aa</p>\n"}],"PostAsset":[{"_id":"source/_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016/featured.png","slug":"featured.png","post":"cju7b3di10001kwetv7eg9uop","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/task-notification-email.png","slug":"task-notification-email.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/azure-blob-storage-using-node/post-featured.png","slug":"post-featured.png","post":"cju7b3dib0005kwetws5ql2bp","modified":0,"renderable":0},{"_id":"source/_posts/spfx-office365-reports/post-featured.png","slug":"post-featured.png","post":"cju7b3dip000ekwetdo13k5en","modified":0,"renderable":0},{"_id":"source/_posts/Sign-In-As-Different-User-In-SharePoint-2013-2016/post-featured.png","slug":"post-featured.png","post":"cju7b3di10001kwetv7eg9uop","modified":0,"renderable":0},{"_id":"source/_posts/azure-appinsight-configurations-using-spfx-customizer/custom-properties.png","slug":"custom-properties.png","post":"cju7b3dib0008kwetxeeqam4l","modified":0,"renderable":0},{"_id":"source/_posts/azure-appinsight-configurations-using-spfx-customizer/post-featured.png","slug":"post-featured.png","post":"cju7b3dib0008kwetxeeqam4l","modified":0,"renderable":0},{"_id":"source/_posts/list-json-formatting/post-featured.png","slug":"post-featured.png","post":"cju7b3dib0009kwetuqi911ox","modified":0,"renderable":0},{"_id":"source/_posts/list-json-formatting/profile-card.png","slug":"profile-card.png","post":"cju7b3dib0009kwetuqi911ox","modified":0,"renderable":0},{"_id":"source/_posts/Import-Terms-From-CSV/groups.csv","slug":"groups.csv","post":"cju7b3di10000kwetk3i3wbsk","modified":0,"renderable":0},{"_id":"source/_posts/Import-Terms-From-CSV/post-featured.png","slug":"post-featured.png","post":"cju7b3di10000kwetk3i3wbsk","modified":0,"renderable":0},{"_id":"source/_posts/Import-Terms-From-CSV/samplecsv.png","slug":"samplecsv.png","post":"cju7b3di10000kwetk3i3wbsk","modified":0,"renderable":0},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/create-new-azure-app-insight.png","slug":"create-new-azure-app-insight.png","post":"cju7b3di10004kwet1o5hlzr5","modified":0,"renderable":0},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/customevents.png","slug":"customevents.png","post":"cju7b3di10004kwet1o5hlzr5","modified":0,"renderable":0},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/js-code-snippet.png","slug":"js-code-snippet.png","post":"cju7b3di10004kwet1o5hlzr5","modified":0,"renderable":0},{"_id":"source/_posts/SharePoint-Online-Integration-with-Azure-App-Insights/post-featured.png","slug":"post-featured.png","post":"cju7b3di10004kwet1o5hlzr5","modified":0,"renderable":0},{"_id":"source/_posts/spfx-image-gallery/post-featured.png","slug":"post-featured.png","post":"cju7b3dib0006kwet1p4j93k3","modified":0,"renderable":0},{"_id":"source/_posts/spfx-image-gallery/spfx-image-gallery-with-panel.png","slug":"spfx-image-gallery-with-panel.png","post":"cju7b3dib0006kwet1p4j93k3","modified":0,"renderable":0},{"_id":"source/_posts/spfx-image-gallery/spfx-image-gallery.png","slug":"spfx-image-gallery.png","post":"cju7b3dib0006kwet1p4j93k3","modified":0,"renderable":0},{"_id":"source/_posts/spfx-image-gallery/taxonomy-query.png","slug":"taxonomy-query.png","post":"cju7b3dib0006kwet1p4j93k3","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/approve-reject-comments.png","slug":"approve-reject-comments.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/complete-flow-steps.png","slug":"complete-flow-steps.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/conditon.png","slug":"conditon.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/confirmation-email.png","slug":"confirmation-email.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/content-approval-status.png","slug":"content-approval-status.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/flow-blank-template.png","slug":"flow-blank-template.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/flow-checker.png","slug":"flow-checker.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/get-file-metadata.png","slug":"get-file-metadata.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/item-created-modified.png","slug":"item-created-modified.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/list-approver-response.png","slug":"list-approver-response.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/post-featured.png","slug":"post-featured.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/project-list.png","slug":"project-list.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/send-email-action.png","slug":"send-email-action.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0},{"_id":"source/_posts/sharepoint-approval-task-using-flow/start-approval-action.png","slug":"start-approval-action.png","post":"cju7b3din000ckwetmbhz4ur0","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cju7b3di10000kwetk3i3wbsk","category_id":"cju7b3di10002kwet4ha2mjjb","_id":"cju7b3dib000akwetbd5lsj6y"}],"PostTag":[{"post_id":"cju7b3di10000kwetk3i3wbsk","tag_id":"cju7b3di10003kwet0zgawypb","_id":"cju7b3dio000dkwetjk90m9i4"},{"post_id":"cju7b3di10000kwetk3i3wbsk","tag_id":"cju7b3dib0007kwetrd5nz512","_id":"cju7b3diq000fkweta4qg4dkt"},{"post_id":"cju7b3di10001kwetv7eg9uop","tag_id":"cju7b3dil000bkwet8wpc9dxq","_id":"cju7b3dis000jkwet14aesk5r"},{"post_id":"cju7b3di10001kwetv7eg9uop","tag_id":"cju7b3diq000gkwetk97e4vvs","_id":"cju7b3dis000kkwetuegu54o8"},{"post_id":"cju7b3di10001kwetv7eg9uop","tag_id":"cju7b3dir000hkwet5qk27lav","_id":"cju7b3dit000mkwetqngty2v9"},{"post_id":"cju7b3di10004kwet1o5hlzr5","tag_id":"cju7b3dir000ikwetco9wykjb","_id":"cju7b3div000qkwet1ogs5esq"},{"post_id":"cju7b3di10004kwet1o5hlzr5","tag_id":"cju7b3dis000lkweti56470rx","_id":"cju7b3div000rkwet0y094f9v"},{"post_id":"cju7b3di10004kwet1o5hlzr5","tag_id":"cju7b3dit000nkwet5f7h0uoi","_id":"cju7b3diw000tkwet1s196n29"},{"post_id":"cju7b3di10004kwet1o5hlzr5","tag_id":"cju7b3dit000okwetl1kwsszy","_id":"cju7b3diw000ukwet9ymxk3dw"},{"post_id":"cju7b3dib0005kwetws5ql2bp","tag_id":"cju7b3dis000lkweti56470rx","_id":"cju7b3diy000xkwetxqfdalfp"},{"post_id":"cju7b3dib0005kwetws5ql2bp","tag_id":"cju7b3diw000skwetgj2b6089","_id":"cju7b3diy000ykwetmj6r6a4w"},{"post_id":"cju7b3dib0005kwetws5ql2bp","tag_id":"cju7b3dix000vkwetysybay1d","_id":"cju7b3diz0010kwetrjuez3dm"},{"post_id":"cju7b3dib0006kwet1p4j93k3","tag_id":"cju7b3dix000wkwetbp2bprg6","_id":"cju7b3diz0012kwetqqf1egrp"},{"post_id":"cju7b3dib0006kwet1p4j93k3","tag_id":"cju7b3diy000zkwetrfmryks9","_id":"cju7b3dj00013kwet9w5dutwd"},{"post_id":"cju7b3dib0008kwetxeeqam4l","tag_id":"cju7b3diz0011kwet0upgv0do","_id":"cju7b3dj20018kwetg2m3sfno"},{"post_id":"cju7b3dib0008kwetxeeqam4l","tag_id":"cju7b3dj00014kwetbe0vj8cr","_id":"cju7b3dj20019kwethiewah8h"},{"post_id":"cju7b3dib0008kwetxeeqam4l","tag_id":"cju7b3dix000wkwetbp2bprg6","_id":"cju7b3dj2001bkwetuno9mcsg"},{"post_id":"cju7b3dib0008kwetxeeqam4l","tag_id":"cju7b3dj10016kwets04aj0qb","_id":"cju7b3dj2001ckwet7sjs0133"},{"post_id":"cju7b3dib0009kwetuqi911ox","tag_id":"cju7b3dj10017kwetm17vfkg5","_id":"cju7b3dj2001ekwethddjgrp8"},{"post_id":"cju7b3dib0009kwetuqi911ox","tag_id":"cju7b3dj2001akwetfi8i7hz8","_id":"cju7b3dj2001fkwets9oh7xos"},{"post_id":"cju7b3din000ckwetmbhz4ur0","tag_id":"cju7b3dj2001dkwetdpjljrfq","_id":"cju7b3dj2001jkwetyg0qt7tg"},{"post_id":"cju7b3din000ckwetmbhz4ur0","tag_id":"cju7b3dj2001gkwetetelqf77","_id":"cju7b3dj2001kkwet4jxrj33i"},{"post_id":"cju7b3din000ckwetmbhz4ur0","tag_id":"cju7b3dit000okwetl1kwsszy","_id":"cju7b3dj2001mkwetjl5lzqit"},{"post_id":"cju7b3dip000ekwetdo13k5en","tag_id":"cju7b3dix000wkwetbp2bprg6","_id":"cju7b3dj2001okwet9uvok9im"},{"post_id":"cju7b3dip000ekwetdo13k5en","tag_id":"cju7b3dj2001lkwetjj9x9ogy","_id":"cju7b3dj2001pkwetfc6l26cm"},{"post_id":"cju7b3dip000ekwetdo13k5en","tag_id":"cju7b3dj2001nkwet33b36k1z","_id":"cju7b3dj2001qkwett025jsuo"}],"Tag":[{"name":"Sharepoint TermStore","_id":"cju7b3di10003kwet0zgawypb"},{"name":"PnP PowerShell","_id":"cju7b3dib0007kwetrd5nz512"},{"name":"SharePoint administration","_id":"cju7b3dil000bkwet8wpc9dxq"},{"name":"SharePoint 2013","_id":"cju7b3diq000gkwetk97e4vvs"},{"name":"SharePoint 2016","_id":"cju7b3dir000hkwet5qk27lav"},{"name":"Azure Application Insight","_id":"cju7b3dir000ikwetco9wykjb"},{"name":"Azure","_id":"cju7b3dis000lkweti56470rx"},{"name":"Analytics","_id":"cju7b3dit000nkwet5f7h0uoi"},{"name":"SharePoint Online","_id":"cju7b3dit000okwetl1kwsszy"},{"name":"Azure Blog Storage","_id":"cju7b3diw000skwetgj2b6089"},{"name":"Node JS","_id":"cju7b3dix000vkwetysybay1d"},{"name":"SPFX","_id":"cju7b3dix000wkwetbp2bprg6"},{"name":"Office UI Fabric","_id":"cju7b3diy000zkwetrfmryks9"},{"name":"Modern SharePoint","_id":"cju7b3diz0011kwet0upgv0do"},{"name":"Azure App Insights","_id":"cju7b3dj00014kwetbe0vj8cr"},{"name":"Application Customizer","_id":"cju7b3dj10016kwets04aj0qb"},{"name":"Modern SharePoint List","_id":"cju7b3dj10017kwetm17vfkg5"},{"name":"JSON Formatting","_id":"cju7b3dj2001akwetfi8i7hz8"},{"name":"Microsoft Flow","_id":"cju7b3dj2001dkwetdpjljrfq"},{"name":"Workflow","_id":"cju7b3dj2001gkwetetelqf77"},{"name":"Microsoft Graph API","_id":"cju7b3dj2001lkwetjj9x9ogy"},{"name":"Charts","_id":"cju7b3dj2001nkwet33b36k1z"}]}}